/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package PeriodicTable;

import java.awt.event.KeyEvent;
import java.io.IOException;
import javax.swing.JOptionPane;



/**
 *
 * @author MKS
 */
public class Periodic_TableNew extends javax.swing.JFrame {

    /**
     * Creates new form Periodic_TableNew
     */
    public Periodic_TableNew() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MainPanel = new javax.swing.JPanel();
        MdLbl = new javax.swing.JLabel();
        HsLbl = new javax.swing.JLabel();
        MgLbl = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        HLbl1 = new javax.swing.JLabel();
        BeLbl = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        PuLbl = new javax.swing.JLabel();
        RgLbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        AcLbl = new javax.swing.JLabel();
        LaLbl = new javax.swing.JLabel();
        ZrLbl4 = new javax.swing.JLabel();
        PmLbl = new javax.swing.JLabel();
        BhLbl = new javax.swing.JLabel();
        TiLbl = new javax.swing.JLabel();
        OLbl = new javax.swing.JLabel();
        TeLbl = new javax.swing.JLabel();
        ReLbl = new javax.swing.JLabel();
        HeLbl = new javax.swing.JLabel();
        AgLbl = new javax.swing.JLabel();
        OsLbl = new javax.swing.JLabel();
        DbLbl = new javax.swing.JLabel();
        UutLbl = new javax.swing.JLabel();
        PLbl = new javax.swing.JLabel();
        Lbl1 = new javax.swing.JLabel();
        SmLbl = new javax.swing.JLabel();
        FLbl = new javax.swing.JLabel();
        CLbl = new javax.swing.JLabel();
        PtLbl = new javax.swing.JLabel();
        ZrLbl3 = new javax.swing.JLabel();
        KLbl = new javax.swing.JLabel();
        FlLbl = new javax.swing.JLabel();
        CdLbl = new javax.swing.JLabel();
        CmLbl = new javax.swing.JLabel();
        HfLbl = new javax.swing.JLabel();
        Frlbl = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        UupLbl = new javax.swing.JLabel();
        UusLbl = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        SrLbl = new javax.swing.JLabel();
        YbLbl = new javax.swing.JLabel();
        CaLbl = new javax.swing.JLabel();
        LvLbl = new javax.swing.JLabel();
        NaLbl = new javax.swing.JLabel();
        CfLbl = new javax.swing.JLabel();
        XeLbl = new javax.swing.JLabel();
        InLbl = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        RfLbl = new javax.swing.JLabel();
        SLbl = new javax.swing.JLabel();
        ScLbl = new javax.swing.JLabel();
        ThLbl = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        PrLbl = new javax.swing.JLabel();
        PoLbl = new javax.swing.JLabel();
        AlLbl = new javax.swing.JLabel();
        BrLbl = new javax.swing.JLabel();
        VLbl = new javax.swing.JLabel();
        SiLbl = new javax.swing.JLabel();
        MtLbl = new javax.swing.JLabel();
        IrLbl = new javax.swing.JLabel();
        AtLbl = new javax.swing.JLabel();
        ILbl = new javax.swing.JLabel();
        BiLbl = new javax.swing.JLabel();
        ULbl = new javax.swing.JLabel();
        RuLbl = new javax.swing.JLabel();
        NiLbl = new javax.swing.JLabel();
        PdLbl = new javax.swing.JLabel();
        TaLbl = new javax.swing.JLabel();
        EsLbl = new javax.swing.JLabel();
        Bk = new javax.swing.JLabel();
        NLbl = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        MnLbl = new javax.swing.JLabel();
        UuoLbl = new javax.swing.JLabel();
        NdLbl = new javax.swing.JLabel();
        TlLbl = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        CeLbl = new javax.swing.JLabel();
        LuLbl = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        FmLbl = new javax.swing.JLabel();
        NpLbl = new javax.swing.JLabel();
        RnLbl = new javax.swing.JLabel();
        GaLbl = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        YLbl = new javax.swing.JLabel();
        AsLbl = new javax.swing.JLabel();
        FeLbl = new javax.swing.JLabel();
        NoLbl = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        SbLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        KrLbl = new javax.swing.JLabel();
        CnLbl = new javax.swing.JLabel();
        RbLbl = new javax.swing.JLabel();
        ArLbl = new javax.swing.JLabel();
        ZrLbl2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        AmLbl = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        DyLbl = new javax.swing.JLabel();
        ZnLbl1 = new javax.swing.JLabel();
        SnLbl = new javax.swing.JLabel();
        GeLbl = new javax.swing.JLabel();
        WLbl = new javax.swing.JLabel();
        MoLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ErLbl = new javax.swing.JLabel();
        RaLbl = new javax.swing.JLabel();
        GdLbl = new javax.swing.JLabel();
        EuLbl = new javax.swing.JLabel();
        RhLbl = new javax.swing.JLabel();
        CrLbl = new javax.swing.JLabel();
        CoLbl = new javax.swing.JLabel();
        PaLbl = new javax.swing.JLabel();
        AuLbl = new javax.swing.JLabel();
        CuLbl = new javax.swing.JLabel();
        TbLbl = new javax.swing.JLabel();
        SeLbl = new javax.swing.JLabel();
        HgLbl = new javax.swing.JLabel();
        NeLbl = new javax.swing.JLabel();
        CsLbl = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        PbLbl = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        HoLbl = new javax.swing.JLabel();
        DsLbl = new javax.swing.JLabel();
        LrLbl = new javax.swing.JLabel();
        NbLbl = new javax.swing.JLabel();
        SgLbl = new javax.swing.JLabel();
        TcLbl = new javax.swing.JLabel();
        ClLbl = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        BLbl = new javax.swing.JLabel();
        BaLbl = new javax.swing.JLabel();
        TmLbl = new javax.swing.JLabel();
        LiLbl = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        SearchBTN = new javax.swing.JButton();
        SearchTF = new javax.swing.JTextField();
        BackGroundLbl = new javax.swing.JLabel();

        jLabel2.setIcon(new javax.swing.ImageIcon("D:\\MKS\\IMAGE\\Edit\\earth-HD_wallpapers.jpg")); // NOI18N
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setMaximumSize(new java.awt.Dimension(1200, 900));
        jLabel2.setMinimumSize(new java.awt.Dimension(1200, 900));
        jLabel2.setPreferredSize(new java.awt.Dimension(1200, 900));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Periodic Table");
        setMinimumSize(new java.awt.Dimension(1200, 720));
        setResizable(false);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setAutoscrolls(true);

        MainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MdLbl.setBackground(new java.awt.Color(253, 205, 205));
        MdLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        MdLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MdLbl.setText("<html> <body> <center>  101 <br><font color=#5882FA> Md<font> </center> </body> </html>");
        MdLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        MdLbl.setOpaque(true);
        MdLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MdLblMouseClicked(evt);
            }
        });
        MainPanel.add(MdLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 660, 52, 52));

        HsLbl.setBackground(new java.awt.Color(255, 153, 153));
        HsLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        HsLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HsLbl.setText("<html> <body> <center><font color = #848484>108</font><br><font color=#5882FA> Hs<font> </center> </body> </html>");
        HsLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        HsLbl.setOpaque(true);
        HsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HsLblMouseClicked(evt);
            }
        });
        MainPanel.add(HsLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 510, 52, 52));

        MgLbl.setBackground(new java.awt.Color(236, 236, 163));
        MgLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        MgLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MgLbl.setText("<html> <body> <center>  12<br><font color=#5882FA> Mg<font> </center> </body> </html>");
        MgLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        MgLbl.setOpaque(true);
        MgLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MgLblMouseClicked(evt);
            }
        });
        MainPanel.add(MgLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, 52, 52));

        jLabel14.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("6");
        MainPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, 21, -1));

        HLbl1.setBackground(new java.awt.Color(153, 255, 153));
        HLbl1.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        HLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HLbl1.setText("<html> <body> <center><font color=red>  1 </font><br> <font color =#5882FA>H</font> </center> </body> </html>");
        HLbl1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        HLbl1.setOpaque(true);
        HLbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HLbl1MouseClicked(evt);
            }
        });
        MainPanel.add(HLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 52, 52));

        BeLbl.setBackground(new java.awt.Color(236, 236, 163));
        BeLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        BeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BeLbl.setText("<html> <body> <center>  4 <br><font color=#5882FA> Be<font> </center> </body> </html>");
        BeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        BeLbl.setOpaque(true);
        BeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BeLblMouseClicked(evt);
            }
        });
        MainPanel.add(BeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 52, 52));

        jLabel6.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("3");
        MainPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 21, -1));

        PuLbl.setBackground(new java.awt.Color(253, 205, 205));
        PuLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        PuLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PuLbl.setText("<html> <body> <center>  94 <br><font color=#5882FA> Pu<font> </center> </body> </html>");
        PuLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        PuLbl.setOpaque(true);
        PuLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PuLblMouseClicked(evt);
            }
        });
        MainPanel.add(PuLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 660, 52, 52));

        RgLbl.setBackground(new java.awt.Color(236, 234, 234));
        RgLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        RgLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RgLbl.setText("<html> <body> <center><font color = #848484>111</font><br><font color=#5882FA> Rg<font> </center> </body> </html>");
        RgLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        RgLbl.setOpaque(true);
        RgLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RgLblMouseClicked(evt);
            }
        });
        MainPanel.add(RgLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 510, 52, 52));

        jLabel5.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("3");
        MainPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 21, -1));

        AcLbl.setBackground(new java.awt.Color(253, 205, 205));
        AcLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        AcLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AcLbl.setText("<html> <body> <center>  89 <br><font color=#5882FA> Ac<font> </center> </body> </html>");
        AcLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        AcLbl.setOpaque(true);
        AcLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AcLblMouseClicked(evt);
            }
        });
        MainPanel.add(AcLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 660, 52, 52));

        LaLbl.setBackground(new java.awt.Color(255, 204, 255));
        LaLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        LaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LaLbl.setText("<html> <body> <center>  57 <br><font color=#5882FA> La\n<font> </center> </body> </html>");
        LaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        LaLbl.setOpaque(true);
        LaLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LaLblMouseClicked(evt);
            }
        });
        MainPanel.add(LaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 600, 52, 52));

        ZrLbl4.setBackground(new java.awt.Color(255, 153, 153));
        ZrLbl4.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ZrLbl4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ZrLbl4.setText("<html> <body> <center>  40 <br><font color=#5882FA> Zr<font> </center> </body> </html>");
        ZrLbl4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ZrLbl4.setOpaque(true);
        ZrLbl4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZrLbl4MouseClicked(evt);
            }
        });
        MainPanel.add(ZrLbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 390, 52, 52));

        PmLbl.setBackground(new java.awt.Color(255, 204, 255));
        PmLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        PmLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PmLbl.setText("<html> <body> <center>  61 <br><font color=#5882FA> Pm<font> </center> </body> </html>");
        PmLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        PmLbl.setOpaque(true);
        PmLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PmLblMouseClicked(evt);
            }
        });
        MainPanel.add(PmLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 600, 52, 52));

        BhLbl.setBackground(new java.awt.Color(255, 153, 153));
        BhLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        BhLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BhLbl.setText("<html> <body> <center><font color = #848484>107</font><br><font color=#5882FA> Bh<font> </center> </body> </html>");
        BhLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        BhLbl.setOpaque(true);
        BhLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BhLblMouseClicked(evt);
            }
        });
        MainPanel.add(BhLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 510, 52, 52));

        TiLbl.setBackground(new java.awt.Color(255, 153, 153));
        TiLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        TiLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TiLbl.setText("<html> <body> <center>  22 <br><font color=#5882FA> Ti\n<font> </center> </body> </html>");
        TiLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        TiLbl.setOpaque(true);
        TiLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TiLblMouseClicked(evt);
            }
        });
        MainPanel.add(TiLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 52, 52));

        OLbl.setBackground(new java.awt.Color(153, 255, 153));
        OLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        OLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OLbl.setText("<html> <body> <center><font color=red>  8 </font><br> <font color =#5882FA>O</font> </center> </body> </html>");
        OLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        OLbl.setOpaque(true);
        OLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OLblMouseClicked(evt);
            }
        });
        MainPanel.add(OLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 210, 52, 52));

        TeLbl.setBackground(new java.awt.Color(204, 204, 0));
        TeLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        TeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TeLbl.setText("<html> <body> <center>  52<br><font color=#5882FA> Te<font> </center> </body> </html>");
        TeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        TeLbl.setOpaque(true);
        TeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TeLblMouseClicked(evt);
            }
        });
        MainPanel.add(TeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 390, 52, 52));

        ReLbl.setBackground(new java.awt.Color(255, 153, 153));
        ReLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ReLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ReLbl.setText("<html> <body> <center>  75 <br><font color=#5882FA> Re<font> </center> </body> </html>");
        ReLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ReLbl.setOpaque(true);
        ReLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReLblMouseClicked(evt);
            }
        });
        MainPanel.add(ReLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 450, 52, 52));

        HeLbl.setBackground(new java.awt.Color(189, 250, 250));
        HeLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        HeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeLbl.setText("<html> <body> <center>  <font color =red>2 </font><br><font color=#5882FA> He<font> </center> </body> </html>");
        HeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        HeLbl.setOpaque(true);
        HeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HeLblMouseClicked(evt);
            }
        });
        MainPanel.add(HeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 150, 52, 52));

        AgLbl.setBackground(new java.awt.Color(255, 153, 153));
        AgLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        AgLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AgLbl.setText("<html> <body> <center>  47 <br><font color=#5882FA> Ag<font> </center> </body> </html>");
        AgLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        AgLbl.setOpaque(true);
        AgLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AgLblMouseClicked(evt);
            }
        });
        MainPanel.add(AgLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 390, 52, 52));

        OsLbl.setBackground(new java.awt.Color(255, 153, 153));
        OsLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        OsLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OsLbl.setText("<html> <body> <center>  76 <br><font color=#5882FA> Os<font> </center> </body> </html>");
        OsLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        OsLbl.setOpaque(true);
        OsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OsLblMouseClicked(evt);
            }
        });
        MainPanel.add(OsLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, 52, 52));

        DbLbl.setBackground(new java.awt.Color(255, 153, 153));
        DbLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        DbLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DbLbl.setText("<html> <body> <center><font color = #848484>105</font><br><font color=#5882FA> Db<font> </center> </body> </html>");
        DbLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        DbLbl.setOpaque(true);
        DbLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DbLblMouseClicked(evt);
            }
        });
        MainPanel.add(DbLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 510, 52, 52));

        UutLbl.setBackground(new java.awt.Color(236, 234, 234));
        UutLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        UutLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UutLbl.setText("<html> <body> <center><font color = #848484>113</font><br><font color=#5882FA> Uut<font> </center> </body> </html>");
        UutLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        UutLbl.setOpaque(true);
        UutLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UutLblMouseClicked(evt);
            }
        });
        MainPanel.add(UutLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 510, 52, 52));

        PLbl.setBackground(new java.awt.Color(153, 255, 153));
        PLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        PLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PLbl.setText("<html> <body> <center> 15<br> <font color =#5882FA>P</font> </center> </body> </html>");
        PLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        PLbl.setOpaque(true);
        PLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PLblMouseClicked(evt);
            }
        });
        MainPanel.add(PLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 270, 52, 52));

        Lbl1.setBackground(new java.awt.Color(255, 255, 255));
        Lbl1.setFont(new java.awt.Font("Traditional Arabic", 1, 24)); // NOI18N
        Lbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lbl1.setText("**");
        Lbl1.setOpaque(true);
        Lbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Lbl1MouseClicked(evt);
            }
        });
        MainPanel.add(Lbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 510, 52, 52));

        SmLbl.setBackground(new java.awt.Color(255, 204, 255));
        SmLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        SmLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SmLbl.setText("<html> <body> <center>  62<br><font color=#5882FA> Sm<font> </center> </body> </html>");
        SmLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        SmLbl.setOpaque(true);
        SmLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SmLblMouseClicked(evt);
            }
        });
        MainPanel.add(SmLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 600, 52, 52));

        FLbl.setBackground(new java.awt.Color(255, 255, 102));
        FLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        FLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FLbl.setText("<html> <body> <center><font color=red>  9 </font><br> <font color =#5882FA>F</font> </center> </body> </html>");
        FLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        FLbl.setOpaque(true);
        FLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FLblMouseClicked(evt);
            }
        });
        MainPanel.add(FLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 210, 52, 52));

        CLbl.setBackground(new java.awt.Color(153, 255, 153));
        CLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CLbl.setText("<html> <body> <center>  6 <br><font color=#5882FA> C<font> </center> </body> </html>");
        CLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        CLbl.setOpaque(true);
        CLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CLblMouseClicked(evt);
            }
        });
        MainPanel.add(CLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 210, 52, 52));

        PtLbl.setBackground(new java.awt.Color(255, 153, 153));
        PtLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        PtLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PtLbl.setText("<html> <body> <center>  78 <br><font color=#5882FA> Pt<font> </center> </body> </html>");
        PtLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        PtLbl.setOpaque(true);
        PtLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PtLblMouseClicked(evt);
            }
        });
        MainPanel.add(PtLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 450, 52, 52));

        ZrLbl3.setBackground(new java.awt.Color(255, 255, 255));
        ZrLbl3.setFont(new java.awt.Font("Traditional Arabic", 1, 24)); // NOI18N
        ZrLbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ZrLbl3.setText("*");
        ZrLbl3.setOpaque(true);
        ZrLbl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZrLbl3MouseClicked(evt);
            }
        });
        MainPanel.add(ZrLbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 450, 52, 52));

        KLbl.setBackground(new java.awt.Color(255, 153, 51));
        KLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        KLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        KLbl.setText("<html> <body> <center>  19 <br> <font color =#5882FA>K</font></center> </body> </html>");
        KLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        KLbl.setOpaque(true);
        KLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KLblMouseClicked(evt);
            }
        });
        MainPanel.add(KLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 52, 52));

        FlLbl.setBackground(new java.awt.Color(236, 234, 234));
        FlLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        FlLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FlLbl.setText("<html> <body> <center><font color = #848484>114</font><br><font color=#5882FA> Fl<font> </center> </body> </html>");
        FlLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        FlLbl.setOpaque(true);
        FlLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FlLblMouseClicked(evt);
            }
        });
        MainPanel.add(FlLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 510, 52, 52));

        CdLbl.setBackground(new java.awt.Color(255, 153, 153));
        CdLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CdLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CdLbl.setText("<html> <body> <center>  48 <br><font color=#5882FA> Cd<font> </center> </body> </html>");
        CdLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        CdLbl.setOpaque(true);
        CdLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CdLblMouseClicked(evt);
            }
        });
        MainPanel.add(CdLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 390, 52, 52));

        CmLbl.setBackground(new java.awt.Color(253, 205, 205));
        CmLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CmLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CmLbl.setText("<html> <body> <center>  96 <br><font color=#5882FA> Cm<font> </center> </body> </html>");
        CmLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        CmLbl.setOpaque(true);
        CmLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmLblMouseClicked(evt);
            }
        });
        MainPanel.add(CmLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 660, 52, 52));

        HfLbl.setBackground(new java.awt.Color(255, 153, 153));
        HfLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        HfLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HfLbl.setText("<html> <body> <center>  72 <br><font color=#5882FA> Hf\n<font> </center> </body> </html>");
        HfLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        HfLbl.setOpaque(true);
        HfLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HfLblMouseClicked(evt);
            }
        });
        MainPanel.add(HfLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 450, 52, 52));

        Frlbl.setBackground(new java.awt.Color(255, 153, 51));
        Frlbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        Frlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Frlbl.setText("<html> <body> <center>  87 <br> <font color =#5882FA>Fr</font></center> </body> </html>");
        Frlbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        Frlbl.setOpaque(true);
        Frlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FrlblMouseClicked(evt);
            }
        });
        MainPanel.add(Frlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, 52, 52));

        jLabel11.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("6");
        MainPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 21, -1));

        UupLbl.setBackground(new java.awt.Color(236, 234, 234));
        UupLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        UupLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UupLbl.setText("<html> <body> <center><font color = #848484>115</font><br><font color=#5882FA> Uup<font> </center> </body> </html>");
        UupLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        UupLbl.setOpaque(true);
        UupLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UupLblMouseClicked(evt);
            }
        });
        MainPanel.add(UupLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 510, 52, 52));

        UusLbl.setBackground(new java.awt.Color(236, 234, 234));
        UusLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        UusLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UusLbl.setText("<html> <body> <center><font color = #848484>117</font><br><font color=#5882FA> Uus<font> </center> </body> </html>");
        UusLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        UusLbl.setOpaque(true);
        UusLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UusLblMouseClicked(evt);
            }
        });
        MainPanel.add(UusLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 510, 52, 52));

        jLabel19.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("8");
        MainPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 21, -1));

        SrLbl.setBackground(new java.awt.Color(236, 236, 163));
        SrLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        SrLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SrLbl.setText("<html> <body> <center>  38 <br><font color=#5882FA> Sr<font> </center> </body> </html>");
        SrLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        SrLbl.setOpaque(true);
        SrLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SrLblMouseClicked(evt);
            }
        });
        MainPanel.add(SrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 390, 52, 52));

        YbLbl.setBackground(new java.awt.Color(255, 204, 255));
        YbLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        YbLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        YbLbl.setText("<html> <body> <center>  70 <br><font color=#5882FA> Yb<font> </center> </body> </html>");
        YbLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        YbLbl.setOpaque(true);
        YbLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                YbLblMouseClicked(evt);
            }
        });
        MainPanel.add(YbLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 600, 52, 52));

        CaLbl.setBackground(new java.awt.Color(236, 236, 163));
        CaLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CaLbl.setText("<html> <body> <center>  20 <br><font color=#5882FA> Ca<font> </center> </body> </html>");
        CaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        CaLbl.setOpaque(true);
        CaLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CaLblMouseClicked(evt);
            }
        });
        MainPanel.add(CaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, 52, 52));

        LvLbl.setBackground(new java.awt.Color(236, 234, 234));
        LvLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        LvLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LvLbl.setText("<html> <body> <center><font color = #848484>116</font><br><font color=#5882FA> Lv<font> </center> </body> </html>");
        LvLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        LvLbl.setOpaque(true);
        LvLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LvLblMouseClicked(evt);
            }
        });
        MainPanel.add(LvLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 510, 52, 52));

        NaLbl.setBackground(new java.awt.Color(255, 153, 51));
        NaLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        NaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NaLbl.setText("<html> <body> <center>  11 <br> <font color =#5882FA>Na</font> </center> </body> </html>");
        NaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        NaLbl.setOpaque(true);
        NaLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NaLblMouseClicked(evt);
            }
        });
        MainPanel.add(NaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 52, 52));

        CfLbl.setBackground(new java.awt.Color(253, 205, 205));
        CfLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CfLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CfLbl.setText("<html> <body> <center>  98 <br><font color=#5882FA> Cf<font> </center> </body> </html>");
        CfLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        CfLbl.setOpaque(true);
        CfLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CfLblMouseClicked(evt);
            }
        });
        MainPanel.add(CfLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 660, 52, 52));

        XeLbl.setBackground(new java.awt.Color(189, 250, 250));
        XeLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        XeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        XeLbl.setText("<html> <body> <center>  <font color =red>54 </font><br><font color=#5882FA> Xe<font> </center> </body> </html>");
        XeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        XeLbl.setOpaque(true);
        XeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                XeLblMouseClicked(evt);
            }
        });
        MainPanel.add(XeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 390, 52, 52));

        InLbl.setBackground(new java.awt.Color(204, 204, 204));
        InLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        InLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        InLbl.setText("<html> <body> <center>  49 <br><font color=#5882FA> In<font> </center> </body> </html>");
        InLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        InLbl.setOpaque(true);
        InLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InLblMouseClicked(evt);
            }
        });
        MainPanel.add(InLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 390, 52, 52));

        jSeparator1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        MainPanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 132, 1070, 10));

        RfLbl.setBackground(new java.awt.Color(255, 153, 153));
        RfLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        RfLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RfLbl.setText("<html> <body> <center><font color = #848484>104</font><br><font color=#5882FA> Rf<font> </center> </body> </html>");
        RfLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        RfLbl.setOpaque(true);
        RfLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RfLblMouseClicked(evt);
            }
        });
        MainPanel.add(RfLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 510, 52, 52));

        SLbl.setBackground(new java.awt.Color(153, 255, 153));
        SLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        SLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SLbl.setText("<html> <body> <center> 16 <br> <font color =#5882FA>S</font> </center> </body> </html>");
        SLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        SLbl.setOpaque(true);
        SLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SLblMouseClicked(evt);
            }
        });
        MainPanel.add(SLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 270, 52, 52));

        ScLbl.setBackground(new java.awt.Color(255, 153, 153));
        ScLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ScLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ScLbl.setText("<html> <body> <center>  21<br><font color=#5882FA> Sc<font> </center> </body> </html>");
        ScLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ScLbl.setOpaque(true);
        ScLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ScLblMouseClicked(evt);
            }
        });
        MainPanel.add(ScLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, 52, 52));

        ThLbl.setBackground(new java.awt.Color(253, 205, 205));
        ThLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ThLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ThLbl.setText("<html> <body> <center>  90 <br><font color=#5882FA> Th\n<font> </center> </body> </html>");
        ThLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ThLbl.setOpaque(true);
        ThLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ThLblMouseClicked(evt);
            }
        });
        MainPanel.add(ThLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 660, 52, 52));

        jLabel8.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("4");
        MainPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 21, -1));

        PrLbl.setBackground(new java.awt.Color(255, 204, 255));
        PrLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        PrLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PrLbl.setText("<html> <body> <center>  59 <br><font color=#5882FA> Pr<font> </center> </body> </html>");
        PrLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        PrLbl.setOpaque(true);
        PrLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PrLblMouseClicked(evt);
            }
        });
        MainPanel.add(PrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 600, 52, 52));

        PoLbl.setBackground(new java.awt.Color(204, 204, 204));
        PoLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        PoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PoLbl.setText("<html> <body> <center>  84 <br><font color=#5882FA> Po<font> </center> </body> </html>");
        PoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        PoLbl.setOpaque(true);
        PoLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PoLblMouseClicked(evt);
            }
        });
        MainPanel.add(PoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 450, 52, 52));

        AlLbl.setBackground(new java.awt.Color(204, 204, 204));
        AlLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        AlLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AlLbl.setText("<html> <body> <center>  13 <br><font color=#5882FA> Al<font> </center> </body> </html>");
        AlLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        AlLbl.setOpaque(true);
        AlLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AlLblMouseClicked(evt);
            }
        });
        MainPanel.add(AlLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 270, 52, 52));

        BrLbl.setBackground(new java.awt.Color(255, 255, 102));
        BrLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        BrLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BrLbl.setText("<html> <body> <center>  <font color=green>35</font> <br><font color=#5882FA> Br<font> </center> </body> </html>");
        BrLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        BrLbl.setOpaque(true);
        BrLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BrLblMouseClicked(evt);
            }
        });
        MainPanel.add(BrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 330, 52, 52));

        VLbl.setBackground(new java.awt.Color(255, 153, 153));
        VLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        VLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VLbl.setText("<html> <body> <center>  23 <br><font color=#5882FA> V<font> </center> </body> </html>");
        VLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        VLbl.setOpaque(true);
        VLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                VLblMouseClicked(evt);
            }
        });
        MainPanel.add(VLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, 52, 52));

        SiLbl.setBackground(new java.awt.Color(204, 204, 0));
        SiLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        SiLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SiLbl.setText("<html> <body> <center>  14 <br><font color=#5882FA> Si<font> </center> </body> </html>");
        SiLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        SiLbl.setOpaque(true);
        SiLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SiLblMouseClicked(evt);
            }
        });
        MainPanel.add(SiLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 270, 52, 52));

        MtLbl.setBackground(new java.awt.Color(236, 234, 234));
        MtLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        MtLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MtLbl.setText("<html> <body> <center><font color = #848484>109</font><br><font color=#5882FA> Mt<font> </center> </body> </html>");
        MtLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        MtLbl.setOpaque(true);
        MtLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MtLblMouseClicked(evt);
            }
        });
        MainPanel.add(MtLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 510, 52, 52));

        IrLbl.setBackground(new java.awt.Color(255, 153, 153));
        IrLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        IrLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IrLbl.setText("<html> <body> <center>  77 <br><font color=#5882FA> Ir<font> </center> </body> </html>");
        IrLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        IrLbl.setOpaque(true);
        IrLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IrLblMouseClicked(evt);
            }
        });
        MainPanel.add(IrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 450, 52, 52));

        AtLbl.setBackground(new java.awt.Color(255, 255, 102));
        AtLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        AtLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AtLbl.setText("<html> <body> <center>  85<br><font color=#5882FA> At<font> </center> </body> </html>");
        AtLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        AtLbl.setOpaque(true);
        AtLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AtLblMouseClicked(evt);
            }
        });
        MainPanel.add(AtLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 450, 52, 52));

        ILbl.setBackground(new java.awt.Color(255, 255, 102));
        ILbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ILbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ILbl.setText("<html> <body> <center>  53 <br><font color=#5882FA> I<font> </center> </body> </html>");
        ILbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ILbl.setOpaque(true);
        ILbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ILblMouseClicked(evt);
            }
        });
        MainPanel.add(ILbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 390, 52, 52));

        BiLbl.setBackground(new java.awt.Color(204, 204, 204));
        BiLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        BiLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BiLbl.setText("<html> <body> <center>  83 <br><font color=#5882FA> Bi<font> </center> </body> </html>");
        BiLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        BiLbl.setOpaque(true);
        BiLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BiLblMouseClicked(evt);
            }
        });
        MainPanel.add(BiLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 450, 52, 52));

        ULbl.setBackground(new java.awt.Color(253, 205, 205));
        ULbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ULbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ULbl.setText("<html> <body> <center>  92 <br><font color=#5882FA> U<font> </center> </body> </html>");
        ULbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ULbl.setOpaque(true);
        ULbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ULblMouseClicked(evt);
            }
        });
        MainPanel.add(ULbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 660, 52, 52));

        RuLbl.setBackground(new java.awt.Color(255, 153, 153));
        RuLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        RuLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RuLbl.setText("<html> <body> <center>  44 <br><font color=#5882FA> Ru<font> </center> </body> </html>");
        RuLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        RuLbl.setOpaque(true);
        RuLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RuLblMouseClicked(evt);
            }
        });
        MainPanel.add(RuLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 390, 52, 52));

        NiLbl.setBackground(new java.awt.Color(255, 153, 153));
        NiLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        NiLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NiLbl.setText("<html> <body> <center>  28 <br><font color=#5882FA> Ni\n<font> </center> </body> </html>");
        NiLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        NiLbl.setOpaque(true);
        NiLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NiLblMouseClicked(evt);
            }
        });
        MainPanel.add(NiLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 330, 52, 52));

        PdLbl.setBackground(new java.awt.Color(255, 153, 153));
        PdLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        PdLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PdLbl.setText("<html> <body> <center>  46 <br><font color=#5882FA> Pd\n<font> </center> </body> </html>");
        PdLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        PdLbl.setOpaque(true);
        PdLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PdLblMouseClicked(evt);
            }
        });
        MainPanel.add(PdLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 390, 52, 52));

        TaLbl.setBackground(new java.awt.Color(255, 153, 153));
        TaLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        TaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TaLbl.setText("<html> <body> <center>  73<br><font color=#5882FA> Ta<font> </center> </body> </html>");
        TaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        TaLbl.setOpaque(true);
        TaLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TaLblMouseClicked(evt);
            }
        });
        MainPanel.add(TaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 450, 52, 52));

        EsLbl.setBackground(new java.awt.Color(253, 205, 205));
        EsLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        EsLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EsLbl.setText("<html> <body> <center>  99 <br><font color=#5882FA> Es<font> </center> </body> </html>");
        EsLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        EsLbl.setOpaque(true);
        EsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EsLblMouseClicked(evt);
            }
        });
        MainPanel.add(EsLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 660, 52, 52));

        Bk.setBackground(new java.awt.Color(253, 205, 205));
        Bk.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        Bk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Bk.setText("<html> <body> <center> 97 <br><font color=#5882FA> Bk<font> </center> </body> </html>");
        Bk.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        Bk.setOpaque(true);
        Bk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BkMouseClicked(evt);
            }
        });
        MainPanel.add(Bk, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 660, 52, 52));

        NLbl.setBackground(new java.awt.Color(153, 255, 153));
        NLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        NLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NLbl.setText("<html> <body> <center><font color=red>  7 </font><br> <font color =#5882FA>N</font> </center> </body> </html>");
        NLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        NLbl.setOpaque(true);
        NLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NLblMouseClicked(evt);
            }
        });
        MainPanel.add(NLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 210, 52, 52));

        jLabel10.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("18");
        MainPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 110, 21, -1));

        MnLbl.setBackground(new java.awt.Color(255, 153, 153));
        MnLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        MnLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MnLbl.setText("<html> <body> <center>  25 <br><font color=#5882FA> Mn<font> </center> </body> </html>");
        MnLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        MnLbl.setOpaque(true);
        MnLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MnLblMouseClicked(evt);
            }
        });
        MainPanel.add(MnLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 330, 52, 52));

        UuoLbl.setBackground(new java.awt.Color(236, 234, 234));
        UuoLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        UuoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UuoLbl.setText("<html> <body> <center><font color = #848484>118</font><br><font color=#5882FA> Uuo<font> </center> </body> </html>");
        UuoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        UuoLbl.setOpaque(true);
        UuoLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UuoLblMouseClicked(evt);
            }
        });
        MainPanel.add(UuoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 510, 52, 52));

        NdLbl.setBackground(new java.awt.Color(255, 204, 255));
        NdLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        NdLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NdLbl.setText("<html> <body> <center>  60 <br><font color=#5882FA> Nd<font> </center> </body> </html>");
        NdLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        NdLbl.setOpaque(true);
        NdLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NdLblMouseClicked(evt);
            }
        });
        MainPanel.add(NdLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 600, 52, 52));

        TlLbl.setBackground(new java.awt.Color(204, 204, 204));
        TlLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        TlLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TlLbl.setText("<html> <body> <center>  81 <br><font color=#5882FA> Tl<font> </center> </body> </html>");
        TlLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        TlLbl.setOpaque(true);
        TlLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TlLblMouseClicked(evt);
            }
        });
        MainPanel.add(TlLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 450, 52, 52));

        jLabel13.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("5");
        MainPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 21, -1));

        CeLbl.setBackground(new java.awt.Color(255, 204, 255));
        CeLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CeLbl.setText("<html> <body> <center>  58 <br><font color=#5882FA> Ce\n<font> </center> </body> </html>");
        CeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        CeLbl.setOpaque(true);
        CeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CeLblMouseClicked(evt);
            }
        });
        MainPanel.add(CeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 600, 52, 52));

        LuLbl.setBackground(new java.awt.Color(255, 204, 255));
        LuLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        LuLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LuLbl.setText("<html> <body> <center>  71<br><font color=#5882FA> Lu<font> </center> </body> </html>");
        LuLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        LuLbl.setOpaque(true);
        LuLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LuLblMouseClicked(evt);
            }
        });
        MainPanel.add(LuLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 600, 52, 52));

        jLabel9.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("5");
        MainPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 21, -1));

        FmLbl.setBackground(new java.awt.Color(253, 205, 205));
        FmLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        FmLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FmLbl.setText("<html> <body> <center>  100 <br><font color=#5882FA> Fm<font> </center> </body> </html>");
        FmLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        FmLbl.setOpaque(true);
        FmLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FmLblMouseClicked(evt);
            }
        });
        MainPanel.add(FmLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 660, 52, 52));

        NpLbl.setBackground(new java.awt.Color(253, 205, 205));
        NpLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        NpLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NpLbl.setText("<html> <body> <center>  93 <br><font color=#5882FA> Np\n<font> </center> </body> </html>");
        NpLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        NpLbl.setOpaque(true);
        NpLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NpLblMouseClicked(evt);
            }
        });
        MainPanel.add(NpLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 660, 52, 52));

        RnLbl.setBackground(new java.awt.Color(189, 250, 250));
        RnLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        RnLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RnLbl.setText("<html> <body> <center>  <font color =red>86 </font><br><font color=#5882FA> Rn<font> </center> </body> </html>");
        RnLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        RnLbl.setOpaque(true);
        RnLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RnLblMouseClicked(evt);
            }
        });
        MainPanel.add(RnLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 450, 52, 52));

        GaLbl.setBackground(new java.awt.Color(204, 204, 204));
        GaLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        GaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GaLbl.setText("<html> <body> <center>  31<br><font color=#5882FA> Ga<font> </center> </body> </html>");
        GaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        GaLbl.setOpaque(true);
        GaLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GaLblMouseClicked(evt);
            }
        });
        MainPanel.add(GaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 330, 52, 52));

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        MainPanel.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 0, 40));

        YLbl.setBackground(new java.awt.Color(255, 153, 153));
        YLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        YLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        YLbl.setText("<html> <body> <center>  39 <br><font color=#5882FA> Y\n<font> </center> </body> </html>");
        YLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        YLbl.setOpaque(true);
        YLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                YLblMouseClicked(evt);
            }
        });
        MainPanel.add(YLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 52, 52));

        AsLbl.setBackground(new java.awt.Color(204, 204, 0));
        AsLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        AsLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AsLbl.setText("<html> <body> <center>  33 <br><font color=#5882FA> As<font> </center> </body> </html>");
        AsLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        AsLbl.setOpaque(true);
        AsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AsLblMouseClicked(evt);
            }
        });
        MainPanel.add(AsLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 330, 52, 52));

        FeLbl.setBackground(new java.awt.Color(255, 153, 153));
        FeLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        FeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FeLbl.setText("<html> <body> <center>  26<br><font color=#5882FA> Fe\n<font> </center> </body> </html>");
        FeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        FeLbl.setOpaque(true);
        FeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FeLblMouseClicked(evt);
            }
        });
        MainPanel.add(FeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 330, 52, 52));

        NoLbl.setBackground(new java.awt.Color(253, 205, 205));
        NoLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        NoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NoLbl.setText("<html> <body> <center>  102 <br><font color=#5882FA> No<font> </center> </body> </html>");
        NoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        NoLbl.setOpaque(true);
        NoLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NoLblMouseClicked(evt);
            }
        });
        MainPanel.add(NoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 660, 52, 52));

        jLabel17.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("7");
        MainPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, 21, -1));

        SbLbl.setBackground(new java.awt.Color(204, 204, 0));
        SbLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        SbLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SbLbl.setText("<html> <body> <center>  51 <br><font color=#5882FA> Sb<font> </center> </body> </html>");
        SbLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        SbLbl.setOpaque(true);
        SbLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SbLblMouseClicked(evt);
            }
        });
        MainPanel.add(SbLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 390, 52, 52));

        jLabel3.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("2");
        MainPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 21, -1));

        jLabel20.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("9");
        MainPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 110, 21, -1));

        KrLbl.setBackground(new java.awt.Color(189, 250, 250));
        KrLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        KrLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        KrLbl.setText("<html> <body> <center>  <font color =red>36</font><br><font color=#5882FA> Kr<font> </center> </body> </html>");
        KrLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        KrLbl.setOpaque(true);
        KrLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                KrLblMouseClicked(evt);
            }
        });
        MainPanel.add(KrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 330, 52, 52));

        CnLbl.setBackground(new java.awt.Color(255, 153, 153));
        CnLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CnLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CnLbl.setText("<html> <body> <center><font color = #848484>112</font><br><font color=#5882FA> Cn<font> </center> </body> </html>");
        CnLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        CnLbl.setOpaque(true);
        CnLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CnLblMouseClicked(evt);
            }
        });
        MainPanel.add(CnLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 510, 52, 52));

        RbLbl.setBackground(new java.awt.Color(255, 153, 51));
        RbLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        RbLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RbLbl.setText("<html> <body> <center>  37 <br> <font color =#5882FA>Rb\n</font></center> </body> </html>");
        RbLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        RbLbl.setOpaque(true);
        RbLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RbLblMouseClicked(evt);
            }
        });
        MainPanel.add(RbLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 52, 52));

        ArLbl.setBackground(new java.awt.Color(189, 250, 250));
        ArLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ArLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ArLbl.setText("<html> <body> <center>  <font color =red>18 </font><br><font color=#5882FA> Ar<font> </center> </body> </html>");
        ArLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ArLbl.setOpaque(true);
        ArLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ArLblMouseClicked(evt);
            }
        });
        MainPanel.add(ArLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 270, 52, 52));

        ZrLbl2.setBackground(new java.awt.Color(255, 255, 255));
        ZrLbl2.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ZrLbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ZrLbl2.setText("*");
        ZrLbl2.setOpaque(true);
        ZrLbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZrLbl2MouseClicked(evt);
            }
        });
        MainPanel.add(ZrLbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 450, 52, 52));

        jLabel7.setFont(new java.awt.Font("Old English Text MT", 3, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("<html>\n<body>\n<u>\nPeriodic Table\n</u>\n</body>\n</html>");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, 400, 60));

        AmLbl.setBackground(new java.awt.Color(253, 205, 205));
        AmLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        AmLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AmLbl.setText("<html> <body> <center>  95<br><font color=#5882FA> Am<font> </center> </body> </html>");
        AmLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        AmLbl.setOpaque(true);
        AmLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AmLblMouseClicked(evt);
            }
        });
        MainPanel.add(AmLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 660, 52, 52));

        jLabel18.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("2");
        MainPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 21, -1));

        DyLbl.setBackground(new java.awt.Color(255, 204, 255));
        DyLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        DyLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DyLbl.setText("<html> <body> <center>  66 <br><font color=#5882FA> Dy<font> </center> </body> </html>");
        DyLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        DyLbl.setOpaque(true);
        DyLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DyLblMouseClicked(evt);
            }
        });
        MainPanel.add(DyLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 600, 52, 52));

        ZnLbl1.setBackground(new java.awt.Color(255, 153, 153));
        ZnLbl1.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ZnLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ZnLbl1.setText("<html> <body> <center>  30 <br><font color=#5882FA> Zn<font> </center> </body> </html>");
        ZnLbl1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ZnLbl1.setOpaque(true);
        ZnLbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ZnLbl1MouseClicked(evt);
            }
        });
        MainPanel.add(ZnLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 330, 52, 52));

        SnLbl.setBackground(new java.awt.Color(204, 204, 204));
        SnLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        SnLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SnLbl.setText("<html> <body> <center>  50 <br><font color=#5882FA> Sn<font> </center> </body> </html>");
        SnLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        SnLbl.setOpaque(true);
        SnLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SnLblMouseClicked(evt);
            }
        });
        MainPanel.add(SnLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 390, 52, 52));

        GeLbl.setBackground(new java.awt.Color(204, 204, 0));
        GeLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        GeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GeLbl.setText("<html> <body> <center>  32 <br><font color=#5882FA> Ge<font> </center> </body> </html>");
        GeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        GeLbl.setOpaque(true);
        GeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GeLblMouseClicked(evt);
            }
        });
        MainPanel.add(GeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 330, 52, 52));

        WLbl.setBackground(new java.awt.Color(255, 153, 153));
        WLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        WLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WLbl.setText("<html> <body> <center>  74 <br><font color=#5882FA> W\n<font> </center> </body> </html>");
        WLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        WLbl.setOpaque(true);
        WLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                WLblMouseClicked(evt);
            }
        });
        MainPanel.add(WLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 450, 52, 52));

        MoLbl.setBackground(new java.awt.Color(255, 153, 153));
        MoLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        MoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MoLbl.setText("<html> <body> <center>  42 <br><font color=#5882FA> Mo<font> </center> </body> </html>");
        MoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        MoLbl.setOpaque(true);
        MoLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MoLblMouseClicked(evt);
            }
        });
        MainPanel.add(MoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 390, 52, 52));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("1");
        MainPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 21, -1));

        ErLbl.setBackground(new java.awt.Color(255, 204, 255));
        ErLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ErLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ErLbl.setText("<html> <body> <center>  68<br><font color=#5882FA> Er<font> </center> </body> </html>");
        ErLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ErLbl.setOpaque(true);
        ErLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ErLblMouseClicked(evt);
            }
        });
        MainPanel.add(ErLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 600, 52, 52));

        RaLbl.setBackground(new java.awt.Color(236, 236, 163));
        RaLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        RaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RaLbl.setText("<html> <body> <center>  88 <br><font color=#5882FA> Ra<font> </center> </body> </html>");
        RaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        RaLbl.setOpaque(true);
        RaLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RaLblMouseClicked(evt);
            }
        });
        MainPanel.add(RaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 510, 52, 52));

        GdLbl.setBackground(new java.awt.Color(255, 204, 255));
        GdLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        GdLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GdLbl.setText("<html> <body> <center>  64<br><font color=#5882FA> Gd<font> </center> </body> </html>");
        GdLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        GdLbl.setOpaque(true);
        GdLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GdLblMouseClicked(evt);
            }
        });
        MainPanel.add(GdLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 600, 52, 52));

        EuLbl.setBackground(new java.awt.Color(255, 204, 255));
        EuLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        EuLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EuLbl.setText("<html> <body> <center>  63<br><font color=#5882FA> Eu<font> </center> </body> </html>");
        EuLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        EuLbl.setOpaque(true);
        EuLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EuLblMouseClicked(evt);
            }
        });
        MainPanel.add(EuLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 600, 52, 52));

        RhLbl.setBackground(new java.awt.Color(255, 153, 153));
        RhLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        RhLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RhLbl.setText("<html> <body> <center>  45 <br><font color=#5882FA> Rh<font> </center> </body> </html>");
        RhLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        RhLbl.setOpaque(true);
        RhLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RhLblMouseClicked(evt);
            }
        });
        MainPanel.add(RhLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 390, 52, 52));

        CrLbl.setBackground(new java.awt.Color(255, 153, 153));
        CrLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CrLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CrLbl.setText("<html> <body> <center>  24 <br><font color=#5882FA> Cr<font> </center> </body> </html>");
        CrLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        CrLbl.setOpaque(true);
        CrLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CrLblMouseClicked(evt);
            }
        });
        MainPanel.add(CrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 330, 52, 52));

        CoLbl.setBackground(new java.awt.Color(255, 153, 153));
        CoLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CoLbl.setText("<html> <body> <center>  27 <br><font color=#5882FA> Co<font> </center> </body> </html>");
        CoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        CoLbl.setOpaque(true);
        CoLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CoLblMouseClicked(evt);
            }
        });
        MainPanel.add(CoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 330, 52, 52));

        PaLbl.setBackground(new java.awt.Color(253, 205, 205));
        PaLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        PaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PaLbl.setText("<html> <body> <center>  91 <br><font color=#5882FA> Pa<font> </center> </body> </html>");
        PaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        PaLbl.setOpaque(true);
        PaLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PaLblMouseClicked(evt);
            }
        });
        MainPanel.add(PaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 660, 52, 52));

        AuLbl.setBackground(new java.awt.Color(255, 153, 153));
        AuLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        AuLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AuLbl.setText("<html> <body> <center>  79 <br><font color=#5882FA> Au<font> </center> </body> </html>");
        AuLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        AuLbl.setOpaque(true);
        AuLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AuLblMouseClicked(evt);
            }
        });
        MainPanel.add(AuLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 450, 52, 52));

        CuLbl.setBackground(new java.awt.Color(255, 153, 153));
        CuLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CuLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CuLbl.setText("<html> <body> <center>  29 <br><font color=#5882FA> Cu<font> </center> </body> </html>");
        CuLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        CuLbl.setOpaque(true);
        CuLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CuLblMouseClicked(evt);
            }
        });
        MainPanel.add(CuLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 330, 52, 52));

        TbLbl.setBackground(new java.awt.Color(255, 204, 255));
        TbLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        TbLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TbLbl.setText("<html> <body> <center>  65 <br><font color=#5882FA> Tb<font> </center> </body> </html>");
        TbLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        TbLbl.setOpaque(true);
        TbLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbLblMouseClicked(evt);
            }
        });
        MainPanel.add(TbLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 600, 52, 52));

        SeLbl.setBackground(new java.awt.Color(153, 255, 153));
        SeLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        SeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SeLbl.setText("<html> <body> <center> 34<br> <font color =#5882FA>Se</font> </center> </body> </html>");
        SeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        SeLbl.setOpaque(true);
        SeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SeLblMouseClicked(evt);
            }
        });
        MainPanel.add(SeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 330, 52, 52));

        HgLbl.setBackground(new java.awt.Color(255, 153, 153));
        HgLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        HgLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HgLbl.setText("<html> <body> <center>  <font color=green>80</font> <br><font color=#5882FA> Hg<font> </center> </body> </html>");
        HgLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        HgLbl.setOpaque(true);
        HgLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HgLblMouseClicked(evt);
            }
        });
        MainPanel.add(HgLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 450, 52, 52));

        NeLbl.setBackground(new java.awt.Color(189, 250, 250));
        NeLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        NeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NeLbl.setText("<html> <body> <center>  <font color =red>10 </font><br><font color=#5882FA> Ne<font> </center> </body> </html>");
        NeLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        NeLbl.setOpaque(true);
        NeLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NeLblMouseClicked(evt);
            }
        });
        MainPanel.add(NeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 210, 52, 52));

        CsLbl.setBackground(new java.awt.Color(255, 153, 51));
        CsLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        CsLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CsLbl.setText("<html> <body> <center>  55 <br> <font color =#5882FA>Cs</font></center> </body> </html>");
        CsLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        CsLbl.setOpaque(true);
        CsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CsLblMouseClicked(evt);
            }
        });
        MainPanel.add(CsLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, 52, 52));

        jLabel16.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("1");
        MainPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 21, -1));

        PbLbl.setBackground(new java.awt.Color(204, 204, 204));
        PbLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        PbLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PbLbl.setText("<html> <body> <center>  82 <br><font color=#5882FA> Pb<font> </center> </body> </html>");
        PbLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        PbLbl.setOpaque(true);
        PbLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PbLblMouseClicked(evt);
            }
        });
        MainPanel.add(PbLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 450, 52, 52));

        jLabel12.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("4");
        MainPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 21, -1));

        HoLbl.setBackground(new java.awt.Color(255, 204, 255));
        HoLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        HoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HoLbl.setText("<html> <body> <center> 67 <br><font color=#5882FA> Ho<font> </center> </body> </html>");
        HoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        HoLbl.setOpaque(true);
        HoLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HoLblMouseClicked(evt);
            }
        });
        MainPanel.add(HoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 600, 52, 52));

        DsLbl.setBackground(new java.awt.Color(236, 234, 234));
        DsLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        DsLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DsLbl.setText("<html> <body> <center><font color = #848484>110</font><br><font color=#5882FA> Ds<font> </center> </body> </html>");
        DsLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        DsLbl.setOpaque(true);
        DsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DsLblMouseClicked(evt);
            }
        });
        MainPanel.add(DsLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 510, 52, 52));

        LrLbl.setBackground(new java.awt.Color(253, 205, 205));
        LrLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        LrLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LrLbl.setText("<html> <body> <center>  103 <br><font color=#5882FA> Lr<font> </center> </body> </html>");
        LrLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        LrLbl.setOpaque(true);
        LrLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LrLblMouseClicked(evt);
            }
        });
        MainPanel.add(LrLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 660, 52, 52));

        NbLbl.setBackground(new java.awt.Color(255, 153, 153));
        NbLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        NbLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NbLbl.setText("<html> <body> <center>  41 <br><font color=#5882FA> Nb\n<font> </center> </body> </html>");
        NbLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        NbLbl.setOpaque(true);
        NbLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NbLblMouseClicked(evt);
            }
        });
        MainPanel.add(NbLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 390, 52, 52));

        SgLbl.setBackground(new java.awt.Color(255, 153, 153));
        SgLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        SgLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SgLbl.setText("<html> <body> <center><font color = #848484>106</font><br><font color=#5882FA> Sg<font> </center> </body> </html>");
        SgLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        SgLbl.setOpaque(true);
        SgLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SgLblMouseClicked(evt);
            }
        });
        MainPanel.add(SgLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 510, 52, 52));

        TcLbl.setBackground(new java.awt.Color(255, 153, 153));
        TcLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        TcLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TcLbl.setText("<html> <body> <center>  43 <br><font color=#5882FA> Tc<font> </center> </body> </html>");
        TcLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        TcLbl.setOpaque(true);
        TcLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TcLblMouseClicked(evt);
            }
        });
        MainPanel.add(TcLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 390, 52, 52));

        ClLbl.setBackground(new java.awt.Color(255, 255, 102));
        ClLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        ClLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ClLbl.setText("<html> <body> <center><font color=red>  17 </font><br> <font color =#5882FA>Cl</font> </center> </body> </html>");
        ClLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        ClLbl.setOpaque(true);
        ClLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClLblMouseClicked(evt);
            }
        });
        MainPanel.add(ClLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 270, 52, 52));

        jLabel15.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("7");
        MainPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, 21, -1));

        BLbl.setBackground(new java.awt.Color(204, 204, 0));
        BLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        BLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BLbl.setText("<html> <body> <center>  5 <br><font color=#5882FA> B<font> </center> </body> </html>");
        BLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        BLbl.setOpaque(true);
        BLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BLblMouseClicked(evt);
            }
        });
        MainPanel.add(BLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 210, 52, 52));

        BaLbl.setBackground(new java.awt.Color(236, 236, 163));
        BaLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        BaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BaLbl.setText("<html> <body> <center>  56 <br><font color=#5882FA> Ba<font> </center> </body> </html>");
        BaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        BaLbl.setOpaque(true);
        BaLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BaLblMouseClicked(evt);
            }
        });
        MainPanel.add(BaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 450, 52, 52));

        TmLbl.setBackground(new java.awt.Color(255, 204, 255));
        TmLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        TmLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TmLbl.setText("<html> <body> <center>  69 <br><font color=#5882FA> Tm<font> </center> </body> </html>");
        TmLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        TmLbl.setOpaque(true);
        TmLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TmLblMouseClicked(evt);
            }
        });
        MainPanel.add(TmLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 600, 52, 52));

        LiLbl.setBackground(new java.awt.Color(255, 153, 51));
        LiLbl.setFont(new java.awt.Font("Traditional Arabic", 1, 17)); // NOI18N
        LiLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LiLbl.setText("<html> <body> <center>  3 <br> <font color =#5882FA>Li</font> </center> </body> </html>");
        LiLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        LiLbl.setOpaque(true);
        LiLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LiLblMouseClicked(evt);
            }
        });
        MainPanel.add(LiLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 52, 52));

        jLabel21.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("10");
        MainPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 110, 21, -1));

        jLabel22.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("11");
        MainPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 110, 21, -1));

        jLabel23.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("12");
        MainPanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 110, 21, -1));

        jLabel24.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("13");
        MainPanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 110, 21, -1));

        jLabel25.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("14");
        MainPanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 110, 21, -1));

        jLabel26.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("15");
        MainPanel.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 110, 21, -1));

        jLabel27.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("16");
        MainPanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 110, 21, -1));

        jLabel28.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("17");
        MainPanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 110, 21, -1));

        jLabel4.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("**Actinides");
        MainPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 690, 110, -1));

        jLabel29.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("*Lanthanides");
        MainPanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 620, 120, -1));

        jLabel30.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Group →");
        MainPanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 70, -1));

        jLabel31.setFont(new java.awt.Font("Monotype Corsiva", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("↓Period ");
        MainPanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, -1, -1));
        MainPanel.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 740, 1060, 10));

        jLabel32.setFont(new java.awt.Font("Monotype Corsiva", 3, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("<html>\n<body>\n<center>\nColor of the atomic number shows state of matter \n<br>\n(at standard conditions: 0 °C and 1 atm):\n</center>\n</body>\n</html>");
        MainPanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 910, 500, -1));

        jLabel33.setBackground(new java.awt.Color(236, 236, 163));
        jLabel33.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 0, 153));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("<html> <body> <center>Alkaline<br> earth metals </center></body> </html>");
        jLabel33.setToolTipText("");
        jLabel33.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel33.setOpaque(true);
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel33MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 830, 110, 50));

        jLabel34.setBackground(new java.awt.Color(255, 153, 51));
        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 0, 153));
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("<html>\n<body>\n<center>\nAlkali <br>\nMetal\n</center>\n</body>\n</html>");
        jLabel34.setToolTipText("");
        jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel34.setOpaque(true);
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 830, 70, 50));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Non -Metals");
        jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 810, 250, -1));

        jLabel36.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Inner transition metals");
        jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel36MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 830, 210, -1));

        jLabel37.setBackground(new java.awt.Color(253, 205, 205));
        jLabel37.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(0, 0, 153));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Actinides");
        jLabel37.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel37.setOpaque(true);
        jLabel37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel37MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 850, 100, 30));

        jLabel39.setBackground(new java.awt.Color(255, 204, 255));
        jLabel39.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(0, 0, 153));
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("Lanthanides");
        jLabel39.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel39.setOpaque(true);
        jLabel39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel39MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 850, 110, 30));

        jLabel38.setBackground(new java.awt.Color(236, 234, 234));
        jLabel38.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 0, 153));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("<html>\n<body>\n<center>\nUnknown<br>\nchemical<br>\nproperties\n</center>\n</body>\n</html>");
        jLabel38.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel38.setOpaque(true);
        MainPanel.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 810, 110, 70));

        jLabel40.setBackground(new java.awt.Color(153, 255, 153));
        jLabel40.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(0, 0, 153));
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("<html>\n<body>\n<center>\nOther<br>\nnonmetals\n</center>\n</body>\n</html>");
        jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel40.setOpaque(true);
        jLabel40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel40MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 830, 90, 50));

        jLabel41.setBackground(new java.awt.Color(204, 204, 204));
        jLabel41.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(0, 0, 153));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("<html>\n<body>\n<center>\nPost-transition<br>\nmetals\n</center>\n</body>\n</html>");
        jLabel41.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel41.setOpaque(true);
        jLabel41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel41MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 830, 110, 50));

        jLabel42.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Metals");
        jLabel42.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel42MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 810, 590, -1));

        jLabel44.setBackground(new java.awt.Color(189, 250, 250));
        jLabel44.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(0, 0, 153));
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("<html>\n<body>\n<center>\nNoble<br>\ngases\n</center>\n</body>\n</html>");
        jLabel44.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel44.setOpaque(true);
        jLabel44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel44MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 830, 80, 50));

        jLabel43.setBackground(new java.awt.Color(255, 153, 153));
        jLabel43.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 153));
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("<html>\n<body>\n<center>\nTransition<br>\n metals\n</center>\n</body>\n</html>");
        jLabel43.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel43.setOpaque(true);
        jLabel43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel43MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 830, 90, 50));

        jLabel45.setBackground(new java.awt.Color(255, 255, 102));
        jLabel45.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(0, 0, 153));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setText("<html>\n<body>\n<center>\nHalogens\n</center>\n</body>\n</html>");
        jLabel45.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel45.setOpaque(true);
        jLabel45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel45MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 830, 80, 50));

        jLabel46.setBackground(new java.awt.Color(204, 204, 0));
        jLabel46.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(0, 0, 153));
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setText("<html>\n<body>\n<center>\nMetalloids\n</center>\n</body>\n</html>");
        jLabel46.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        jLabel46.setOpaque(true);
        jLabel46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel46MouseClicked(evt);
            }
        });
        MainPanel.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 810, 110, 70));

        jLabel47.setFont(new java.awt.Font("Monotype Corsiva", 3, 24)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 255, 255));
        jLabel47.setText("Border shows natural occurrence:");
        MainPanel.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 910, -1, -1));

        jLabel48.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("Black = Solid");
        jLabel48.setOpaque(true);
        MainPanel.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 980, 100, 30));

        jLabel49.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("<html> <body> <font color = #848484> Grey = Unknown </font> </body> </html>");
        jLabel49.setOpaque(true);
        MainPanel.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 980, 120, 30));

        jLabel50.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("<html>\n<body>\n<center>\n<font color =#5882FA>\nPrimordial</font>\n</center>\n</body>\n</html>");
        jLabel50.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 0, 204), 2));
        jLabel50.setOpaque(true);
        MainPanel.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 980, 150, 30));

        jLabel51.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("<html> <body> <font color = red> Red = Gas </font> </body> </html>");
        jLabel51.setOpaque(true);
        MainPanel.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 980, 100, 30));

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        MainPanel.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 900, 10, 120));

        jLabel52.setFont(new java.awt.Font("Monotype Corsiva", 3, 24)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(255, 255, 255));
        jLabel52.setText("Some element categories in the periodic table");
        MainPanel.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 760, -1, -1));

        jLabel53.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("<html>\n<body>\n<font color = green>\nGreen = Liquid\n</font>\n</body>\n</html>");
        jLabel53.setOpaque(true);
        MainPanel.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 980, 100, 30));

        jLabel55.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("<html>\n<body>\n<center>\n<font color =#5882FA>\nSynthetic</font>\n</center>\n</body>\n</html>");
        jLabel55.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 3));
        jLabel55.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
        jLabel55.setOpaque(true);
        MainPanel.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 980, 150, 30));

        jLabel56.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel56.setText("<html>\n<body>\n<center>\n<font color =#5882FA>\nFrom decay</font>\n</center>\n</body>\n</html>");
        jLabel56.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 0, 0), 3));
        jLabel56.setOpaque(true);
        MainPanel.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 980, 150, 30));

        SearchBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PeriodicTable/search.png"))); // NOI18N
        SearchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBTNActionPerformed(evt);
            }
        });
        SearchBTN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchBTNKeyPressed(evt);
            }
        });
        MainPanel.add(SearchBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 0, 60, 30));

        SearchTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchTFKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SearchTFKeyTyped(evt);
            }
        });
        MainPanel.add(SearchTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 0, 230, 30));

        BackGroundLbl.setBackground(new java.awt.Color(255, 153, 102));
        BackGroundLbl.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        BackGroundLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PeriodicTable/earth-HD_wallpapers.jpg"))); // NOI18N
        BackGroundLbl.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        BackGroundLbl.setDisabledIcon(null);
        BackGroundLbl.setMaximumSize(new java.awt.Dimension(1200, 900));
        BackGroundLbl.setMinimumSize(new java.awt.Dimension(1200, 900));
        BackGroundLbl.setName(""); // NOI18N
        BackGroundLbl.setPreferredSize(new java.awt.Dimension(1200, 900));
        BackGroundLbl.setRequestFocusEnabled(false);
        MainPanel.add(BackGroundLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 1180));

        jScrollPane1.setViewportView(MainPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LiLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LiLblMouseClicked
Lithium Li = new Lithium();
Li.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_LiLblMouseClicked

    private void NaLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NaLblMouseClicked
Sodium_Na Na = new Sodium_Na();
Na.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_NaLblMouseClicked

    private void RaLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RaLblMouseClicked
Radium Ra = new Radium();
Ra.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_RaLblMouseClicked

    private void KLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KLblMouseClicked
Potassium K = new Potassium();
K.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_KLblMouseClicked

    private void SeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SeLblMouseClicked
Selenium Se = new Selenium();
Se.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_SeLblMouseClicked

    private void RbLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RbLblMouseClicked
Rubidium Rb  = new Rubidium();
Rb.setVisible(true);
this.setVisible(false);


    }//GEN-LAST:event_RbLblMouseClicked

    private void CsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CsLblMouseClicked
Caesium Cs = new Caesium();
Cs.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_CsLblMouseClicked

    private void FrlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FrlblMouseClicked
Francium Fr = new Francium();
Fr.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_FrlblMouseClicked

    private void BeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BeLblMouseClicked
Beryllium Be = new Beryllium();
Be.setVisible(true);
this.setVisible(false);
        
    }//GEN-LAST:event_BeLblMouseClicked

    private void MgLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MgLblMouseClicked
Magnesium Mg = new Magnesium(); 
Mg.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_MgLblMouseClicked

    private void SrLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SrLblMouseClicked
Strontium Sr = new Strontium();   
Sr.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_SrLblMouseClicked

    private void BaLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BaLblMouseClicked
Barium Ba = new Barium();
Ba.setVisible(true);
this.setVisible(false);
        
    }//GEN-LAST:event_BaLblMouseClicked

    private void CaLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CaLblMouseClicked
Calcium Ca = new Calcium();
Ca.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_CaLblMouseClicked

    private void Lbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lbl1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Lbl1MouseClicked

    private void HeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HeLblMouseClicked
Helium He  = new Helium();
He.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_HeLblMouseClicked

    private void YLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YLblMouseClicked
Yttrium Y = new Yttrium();
Y.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_YLblMouseClicked

    private void ScLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ScLblMouseClicked
Scandium Sc = new Scandium();
Sc.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_ScLblMouseClicked

    private void TiLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TiLblMouseClicked
Titanium Ti = new Titanium();
Ti.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_TiLblMouseClicked

    private void CdLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CdLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Cadmium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_CdLblMouseClicked

    private void CrLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CrLblMouseClicked
Chromium Cr = new Chromium();
Cr.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_CrLblMouseClicked

    private void MnLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MnLblMouseClicked
Manganese Mn = new Manganese();
Mn.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_MnLblMouseClicked

    private void FeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FeLblMouseClicked
    Iron Fe = new Iron();
    Fe.setVisible(true);
    this.setVisible(false);
    
    }//GEN-LAST:event_FeLblMouseClicked

    private void CoLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CoLblMouseClicked
   Cobalt Co = new Cobalt();
   Co.setVisible(true);
   this.setVisible(false);
    
    }//GEN-LAST:event_CoLblMouseClicked

    private void NiLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NiLblMouseClicked
Nickel Ni = new Nickel();
Ni.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_NiLblMouseClicked

    private void CuLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CuLblMouseClicked
       Copper Cu = new Copper();
       Cu.setVisible(true);
       this.setVisible(false);
    }//GEN-LAST:event_CuLblMouseClicked

    private void VLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VLblMouseClicked
   Vanadium V = new Vanadium();
   V.setVisible(true);
   this.setVisible(false);
    }//GEN-LAST:event_VLblMouseClicked

    private void NbLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NbLblMouseClicked
  Niobium Nb = new Niobium();
  Nb.setVisible(true);
  this.setVisible(false);
    }//GEN-LAST:event_NbLblMouseClicked

    private void MoLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoLblMouseClicked
Molybdenum Mo = new Molybdenum();
Mo.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_MoLblMouseClicked

    private void TcLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TcLblMouseClicked
Technetium Tc = new Technetium();
Tc.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_TcLblMouseClicked

    private void RuLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RuLblMouseClicked
Ruthenium Ru = new Ruthenium();
Ru.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_RuLblMouseClicked

    private void RhLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RhLblMouseClicked
Rhodium Rh = new Rhodium();
Rh.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_RhLblMouseClicked

    private void PdLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PdLblMouseClicked
Palladium Pd = new Palladium();
Pd.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_PdLblMouseClicked

    private void AgLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AgLblMouseClicked
 try {
    String URL = "http://en.wikipedia.org/wiki/Silver";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_AgLblMouseClicked

    private void ZrLbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZrLbl2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ZrLbl2MouseClicked

    private void ZrLbl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZrLbl3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ZrLbl3MouseClicked

    private void ZrLbl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZrLbl4MouseClicked
Zirconium Zr = new Zirconium();
Zr.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_ZrLbl4MouseClicked

    private void HsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HsLblMouseClicked
       try {
    String URL = "http://en.wikipedia.org/wiki/Hassium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_HsLblMouseClicked

    private void TaLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaLblMouseClicked
       try {
    String URL = "http://en.wikipedia.org/wiki/Tantalum";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_TaLblMouseClicked

    private void WLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WLblMouseClicked
       try {
    String URL = "http://en.wikipedia.org/wiki/Tungsten";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_WLblMouseClicked

    private void ReLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReLblMouseClicked
       try {
    String URL = "http://en.wikipedia.org/wiki/Rhenium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_ReLblMouseClicked

    private void OsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OsLblMouseClicked
        try {
    String URL = "http://en.wikipedia.org/wiki/Osmium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_OsLblMouseClicked

    private void IrLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IrLblMouseClicked
       try {
    String URL = "http://en.wikipedia.org/wiki/Iridium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_IrLblMouseClicked

    private void CnLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CnLblMouseClicked
           try {
    String URL = "http://en.wikipedia.org/wiki/Copernicium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_CnLblMouseClicked

    private void PtLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PtLblMouseClicked
      try {
    String URL = "http://en.wikipedia.org/wiki/Platinum";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_PtLblMouseClicked

    private void AuLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AuLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Gold";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_AuLblMouseClicked

    private void ZnLbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ZnLbl1MouseClicked
    Zinc Zn = new Zinc();
    Zn.setVisible(true);
    this.setVisible(false);
    }//GEN-LAST:event_ZnLbl1MouseClicked

    private void GaLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GaLblMouseClicked
Gallium Ga = new Gallium();
Ga.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_GaLblMouseClicked

    private void AlLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlLblMouseClicked
Aluminium Al = new Aluminium();
Al.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_AlLblMouseClicked

    private void PoLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PoLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Polonium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}     
    }//GEN-LAST:event_PoLblMouseClicked

    private void InLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Indium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}     
    }//GEN-LAST:event_InLblMouseClicked

    private void SnLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SnLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Tin";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}     
    }//GEN-LAST:event_SnLblMouseClicked

    private void PbLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PbLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Lead";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}     
    }//GEN-LAST:event_PbLblMouseClicked

    private void BiLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BiLblMouseClicked
 try {
    String URL = "http://en.wikipedia.org/wiki/Bismuth";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}     
    }//GEN-LAST:event_BiLblMouseClicked

    private void HfLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HfLblMouseClicked
          try {
    String URL = "http://en.wikipedia.org/wiki/Hafnium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_HfLblMouseClicked

    private void LuLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LuLblMouseClicked
try {
    String URL = "http://en.wikipedia.org/wiki/Lutetium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_LuLblMouseClicked

    private void DbLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DbLblMouseClicked
   try {
    String URL = "http://en.wikipedia.org/wiki/Dubnium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_DbLblMouseClicked

    private void SgLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SgLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Seaborgium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_SgLblMouseClicked

    private void BhLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BhLblMouseClicked
      try {
    String URL = "http://en.wikipedia.org/wiki/Bohrium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_BhLblMouseClicked

    private void HgLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HgLblMouseClicked
          try {
    String URL = "http://en.wikipedia.org/wiki/Mercury_%28element%29";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_HgLblMouseClicked

    private void TlLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TlLblMouseClicked
          try {
    String URL = "http://en.wikipedia.org/wiki/Thallium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_TlLblMouseClicked

    private void MtLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MtLblMouseClicked
               try {
    String URL = "http://en.wikipedia.org/wiki/Meitnerium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_MtLblMouseClicked

    private void DsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DsLblMouseClicked
                try {
    String URL = "http://en.wikipedia.org/wiki/Darmstadtium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_DsLblMouseClicked

    private void RgLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RgLblMouseClicked
                 try {
    String URL = "http://en.wikipedia.org/wiki/Roentgenium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_RgLblMouseClicked

    private void UutLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UutLblMouseClicked
                try {
    String URL = "http://en.wikipedia.org/wiki/Ununtrium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_UutLblMouseClicked

    private void FlLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FlLblMouseClicked
                  try {
    String URL = "http://en.wikipedia.org/wiki/Flerovium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_FlLblMouseClicked

    private void UupLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UupLblMouseClicked
                    try {
    String URL = "http://en.wikipedia.org/wiki/Ununpentium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_UupLblMouseClicked

    private void LvLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LvLblMouseClicked
                try {
    String URL = "http://en.wikipedia.org/wiki/Livermorium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_LvLblMouseClicked

    private void FLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FLblMouseClicked
Fluorine F = new Fluorine();
F.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_FLblMouseClicked

    private void TeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TeLblMouseClicked
          try {
    String URL = "http://en.wikipedia.org/wiki/Tellurium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_TeLblMouseClicked

    private void CLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CLblMouseClicked
Carbon C = new Carbon();
C.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_CLblMouseClicked

    private void SiLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SiLblMouseClicked
Silicon Si = new Silicon();
Si.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_SiLblMouseClicked

    private void GeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GeLblMouseClicked
 Germanium Ge = new Germanium();
 Ge.setVisible(true);
 this.setVisible(false);
    }//GEN-LAST:event_GeLblMouseClicked

    private void SbLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SbLblMouseClicked
          try {
    String URL = "http://en.wikipedia.org/wiki/Antimony";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_SbLblMouseClicked

    private void AsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AsLblMouseClicked
Arsenic As = new Arsenic();
As.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_AsLblMouseClicked

    private void UusLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UusLblMouseClicked
         try {
    String URL = "http://en.wikipedia.org/wiki/Ununseptium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_UusLblMouseClicked

    private void AtLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AtLblMouseClicked
        try {
    String URL = "http://en.wikipedia.org/wiki/Astatine";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}  
    }//GEN-LAST:event_AtLblMouseClicked

    private void ILblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ILblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Iodine";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}       
    }//GEN-LAST:event_ILblMouseClicked

    private void BrLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BrLblMouseClicked
try {
    String URL = "http://en.wikipedia.org/wiki/Bromine";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required ");
}
    }//GEN-LAST:event_BrLblMouseClicked

    private void ClLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClLblMouseClicked
Chlorine Cl = new Chlorine();
Cl.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_ClLblMouseClicked

    private void BLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BLblMouseClicked
Boron B = new Boron();
B.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_BLblMouseClicked

    private void HLbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HLbl1MouseClicked
Hydrogen H = new Hydrogen();
H.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_HLbl1MouseClicked

    private void PLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PLblMouseClicked
Phosphorus P = new Phosphorus();
P.setVisible(true);
this.setVisible(false);
        
    }//GEN-LAST:event_PLblMouseClicked

    private void NLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NLblMouseClicked
Nitrogen N = new Nitrogen();
N.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_NLblMouseClicked

    private void OLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OLblMouseClicked
Oxygen O = new Oxygen();
O.setVisible(true);
this.setVisible(false);
    }//GEN-LAST:event_OLblMouseClicked

    private void SLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SLblMouseClicked
Sulphur S = new Sulphur();
S.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_SLblMouseClicked

    private void UuoLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UuoLblMouseClicked
              try {
    String URL = "http://en.wikipedia.org/wiki/Ununoctium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_UuoLblMouseClicked

    private void RnLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RnLblMouseClicked
            try {
    String URL = "http://en.wikipedia.org/wiki/Radon";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_RnLblMouseClicked

    private void XeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_XeLblMouseClicked
        try {
    String URL = "http://en.wikipedia.org/wiki/Xenon";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_XeLblMouseClicked

    private void KrLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KrLblMouseClicked
 try {
    String URL = "http://en.wikipedia.org/wiki/Krypton";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required ");
}
    }//GEN-LAST:event_KrLblMouseClicked

    private void NeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NeLblMouseClicked
   Neon Ne  =new Neon();
   Ne.setVisible(true);
   this.setVisible(false);
    }//GEN-LAST:event_NeLblMouseClicked

    private void ArLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArLblMouseClicked
Argon Ar = new Argon();
Ar.setVisible(true);
this.setVisible(false);

    }//GEN-LAST:event_ArLblMouseClicked

    private void RfLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RfLblMouseClicked
         try {
    String URL = "http://en.wikipedia.org/wiki/Rutherfordium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_RfLblMouseClicked

    private void LrLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LrLblMouseClicked
   try {
    String URL = "http://en.wikipedia.org/wiki/Lawrencium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_LrLblMouseClicked

    private void CeLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CeLblMouseClicked
         try {
    String URL = "http://en.wikipedia.org/wiki/Cerium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_CeLblMouseClicked

    private void PrLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PrLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Praseodymium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_PrLblMouseClicked

    private void NdLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NdLblMouseClicked
 try {
    String URL = "http://en.wikipedia.org/wiki/Neodymium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_NdLblMouseClicked

    private void PmLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PmLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Promethium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_PmLblMouseClicked

    private void SmLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SmLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Samarium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_SmLblMouseClicked

    private void EuLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EuLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Europium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_EuLblMouseClicked

    private void GdLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GdLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Gadolinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_GdLblMouseClicked

    private void TbLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Terbium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_TbLblMouseClicked

    private void DyLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DyLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Dysprosium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_DyLblMouseClicked

    private void HoLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HoLblMouseClicked
 try {
    String URL = "http://en.wikipedia.org/wiki/Holmium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_HoLblMouseClicked

    private void ErLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ErLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Erbium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_ErLblMouseClicked

    private void TmLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TmLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Thulium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_TmLblMouseClicked

    private void YbLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_YbLblMouseClicked
try {
    String URL = "http://en.wikipedia.org/wiki/Ytterbium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_YbLblMouseClicked

    private void LaLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LaLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Lanthanum";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_LaLblMouseClicked

    private void AcLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AcLblMouseClicked
try {
    String URL = "http://en.wikipedia.org/wiki/Actinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}     
    }//GEN-LAST:event_AcLblMouseClicked

    private void ThLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ThLblMouseClicked
 try {
    String URL = "http://en.wikipedia.org/wiki/Thorium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_ThLblMouseClicked

    private void PaLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PaLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Protactinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_PaLblMouseClicked

    private void ULblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ULblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Uranium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_ULblMouseClicked

    private void NpLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NpLblMouseClicked
      try {
    String URL = "http://en.wikipedia.org/wiki/Neptunium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_NpLblMouseClicked

    private void PuLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PuLblMouseClicked
try {
    String URL = "http://en.wikipedia.org/wiki/Plutonium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}      
    }//GEN-LAST:event_PuLblMouseClicked

    private void AmLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AmLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Americium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_AmLblMouseClicked

    private void CmLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmLblMouseClicked
   try {
    String URL = "http://en.wikipedia.org/wiki/Curium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_CmLblMouseClicked

    private void BkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BkMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Berkelium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_BkMouseClicked

    private void CfLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CfLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Californium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_CfLblMouseClicked

    private void EsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EsLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Einsteinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_EsLblMouseClicked

    private void FmLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FmLblMouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Fermium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_FmLblMouseClicked

    private void MdLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MdLblMouseClicked
try {
    String URL = "http://en.wikipedia.org/wiki/Mendelevium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}      
    }//GEN-LAST:event_MdLblMouseClicked

    private void NoLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NoLblMouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Nobelium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_NoLblMouseClicked

    private void SearchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBTNActionPerformed
    String a = SearchTF.getText();
   switch (a) {
                case "H":
                case "Hydrogen":
                case "HYDROGEN":
                case "hydrogen":
                case "1":
                    Hydrogen H = new Hydrogen();
                    H.setVisible(true);
                    this.setVisible(false);
                    break;
                
                case "Li":
                case "Lithium":
                case "LITHIUM":
                case "lithium":
                case "3":
                    Lithium Li = new Lithium();
                    Li.setVisible(true);
                    this.setVisible(false);
                    break;
                
                case "He":
                case "Helium":
                case "HELIUM":
                case "helium":
                case "2":
                    Helium He = new Helium();
                    He.setVisible(true);
                    this.setVisible(false);
                    break;
                
                case "Be":
                case "Beryllium":
                case "beryllium":
                case "BERYLLIUM":
                case "4":
                    Beryllium Be = new Beryllium();
                    Be.setVisible(true);
                    this.setVisible(false);
                    break;
            
                case "B":
                case "Boron":
                case "boron":
                case "BORON":
                case "5":
                    Boron B = new Boron();
                    B.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "C":
                case "Carbon":
                case "carbon":
                case "CARBON":
                case "6":
                    Carbon C = new Carbon();
                    C.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "N":
                case "Nitrogen":
                case "nitrogen":
                case "NITROGEN":
                case "7":
                    Nitrogen N = new Nitrogen();
                    N.setVisible(true);
                    this.setVisible(false);
                    break;
            
                case "O":
                case "Oxygen":
                case "oxygen":
                case "OXYGEN":
                case "8":
                    Oxygen O = new Oxygen();
                    O.setVisible(true);
                    this.setVisible(false);
                    break;
            
                case "F":
                case "Fluorine":
                case "fluorine":
                case "FLUORINE":
                case "9":
                    Fluorine F = new Fluorine();
                    F.setVisible(true);
                    this.setVisible(false);
                    break;
              
                case "Ne":
                case "Neon":
                case "neon":
                case "NEON":
                case "10":
                    Neon Ne = new Neon();
                    Ne.setVisible(true);
                    this.setVisible(false);
                    break;
                
                case "Na":
                case "Sodium":
                case "sodium":
                case "SODIUM":
                case "11":
                    Sodium_Na Na = new Sodium_Na();
                    Na.setVisible(true);
                    this.setVisible(false);
                    break;
               
                case "Mg":
                case "Magnesium":
                case "magnesium":
                case "MAGNESIUM":
                case "12":
                    Magnesium Mg = new Magnesium();
                    Mg.setVisible(true);
                    this.setVisible(false);
                    break;    
   
                case "Al":
                case "Aluminium":
                case "aluminium":
                case "ALUMINIUM":
                case "13":
                    Aluminium Al = new Aluminium();
                    Al.setVisible(true);
                    this.setVisible(false);
                    break;    
   
                case "Si":
                case "Silicon":
                case "silicon":
                case "SILICON":
                case "14":
                    Silicon Si = new Silicon();
                    Si.setVisible(true);
                    this.setVisible(false);
                    break;    
     
                case "P":
                case "Phosphorus":
                case "phosphorus":
                case "PHOSPHORUS":
                case "15":
                    Phosphorus P = new Phosphorus();
                    P.setVisible(true);
                    this.setVisible(false);
                    break;  
                    
                case "S":
                case "Sulphur":
                case "sulphur":
                case "SULPHUR":
                case "16":
                    Sulphur S = new Sulphur();
                    S.setVisible(true);
                    this.setVisible(false);
                    break;  
                    
                case "Cl":
                case "Chlorine":
                case "chlorine":
                case "CHLORINE":
                case "17":
                    Chlorine Cl = new Chlorine();
                    Cl.setVisible(true);
                    this.setVisible(false);
                    break;  
                          
                case "Ar":
                case "Argon":
                case "argon":
                case "ARGON":
                case "18":
                    Argon Ar = new Argon();
                    Ar.setVisible(true);
                    this.setVisible(false);
                    break;  
                    
                case "K":
                case "Potassium":
                case "potassium":
                case "POTASSIUM":
                case "19":
                    Potassium K = new Potassium();
                    K.setVisible(true);
                    this.setVisible(false);
                    break;  
                 
                case "Ca":
                case "Calcium":
                case "calcium":
                case "CALCIUM":
                case "20":
                    Calcium Ca = new Calcium();
                    Ca.setVisible(true);
                    this.setVisible(false);
                    break;      
   
                case "Sc":
                case "Scandium":
                case "scandium":
                case "SCANDIUM":
                case "21":
                    Scandium Sc = new Scandium();
                    Sc.setVisible(true);
                    this.setVisible(false);
                    break;      
    
                case "Ti":
                case "Titanium":
                case "titanium":
                case "TITANIUM":
                case "22":
                    Titanium Ti = new Titanium();
                    Ti.setVisible(true);
                    this.setVisible(false);
                    break;  
   
                case "V":
                case "Vanadium":
                case "vanadium":
                case "VANADIUM":
                case "23":
                    Vanadium V = new Vanadium();
                    V.setVisible(true);
                    this.setVisible(false);
                    break;  
   
                case "Cr":
                case "Chromium":
                case "chromium":
                case "CHROMIUM":
                case "24":
                    Chromium Cr = new Chromium();
                    Cr.setVisible(true);
                    this.setVisible(false);
                    break;      
                    
                case "Mn":
                case "Manganese":
                case "manganese":
                case "MANGANESE":
                case "25":
                    Manganese Mn = new Manganese();
                    Mn.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "Fe":
                case "Iron":
                case "iron":
                case "IRON":
                case "26":
                    Iron Fe = new Iron();
                    Fe.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "Co":
                case "Cobalt":
                case "cobalt":
                case "COBALT":
                case "27":
                    Cobalt Co = new Cobalt();
                    Co.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "Ni":
                case "Nickel":
                case "nickelt":
                case "NICKEL":
                case "28":
                    Nickel Ni = new Nickel();
                    Ni.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "Cu":
                case "Copper":
                case "copper":
                case "COPPER":
                case "29":
                    Copper Cu = new Copper();
                    Cu.setVisible(true);
                    this.setVisible(false);
                    break;   
                    
                case "Zn":
                case "Zinc":
                case "zinc":
                case "ZINC":
                case " 30 ":
                    Zinc Zn = new Zinc();
                    Zn.setVisible(true);
                    this.setVisible(false);
                    break;   
                    
                case "Ga":
                case "Gallium":
                case "gallium":
                case "GALLIUM":
                case "31":
                    Gallium Ga = new Gallium();
                    Ga.setVisible(true);
                    this.setVisible(false);
                    break;   
                    
                case "Ge":
                case "Germanium":
                case "germanium":
                case "GERMANIUM":
                case "32":
                    Germanium Ge = new Germanium();
                    Ge.setVisible(true);
                    this.setVisible(false);
                    break;   
                    
                case "As":
                case "Arsenic":
                case "arsenic":
                case "ARSENIC":
                case "33":
                    Arsenic As = new Arsenic();
                    As.setVisible(true);
                    this.setVisible(false);
                    break;      
                
                case "Se":
                case "Selenium":
                case "selenium":
                case "SELENIUM":
                case "34":
                    Selenium Se = new Selenium();
                    Se.setVisible(true);
                    this.setVisible(false);
                    break;      
                       
                case "Br":
                case "Bromine":
                case "bromine":
                case "BROMINE":
                case "35":
                try {
    String URL = "http://en.wikipedia.org/wiki/Bromine";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;       
                
                case "Kr":
                case "Krypton":
                case "krypton":
                case "KRYPTON":
                case "36":
                try {
    String URL = "http://en.wikipedia.org/wiki/Krypton";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;      
                    
                    
                case "Rb":
                case "Rubidium":
                case "rubidium":
                case "RUBIDIUM":
                case "37":
                    Rubidium Rb = new Rubidium();
                    Rb.setVisible(true);
                    this.setVisible(false);
                    break;            
                    
                       
                case "Sr":
                case "Strontium":
                case "strontium":
                case "STRONTIUM":
                case "38":
                    Strontium Sr = new Strontium();
                    Sr.setVisible(true);
                    this.setVisible(false);
                    break;           
                    
                case "Y":
                case "Yttrium":
                case "yttrium":
                case "YTTRIUM":
                case "39":
                    Yttrium Y = new Yttrium();
                    Y.setVisible(true);
                    this.setVisible(false);
                    break;           
                   
                case "Zr":
                case "Zirconium":
                case "zirconium":
                case "ZIRCONIUM":
                case "40":
                    Zirconium Zr = new Zirconium();
                    Zr.setVisible(true);
                    this.setVisible(false);
                    break;      
                    
                case "Nb":
                case "Niobium":
                case "niobium":
                case "NIOBIUM":
                case "41":
                   Niobium Nb = new Niobium();
                    Nb.setVisible(true);
                    this.setVisible(false);
                    break;      
                    
                case "Mo":
                case "Molybdenum":
                case "molybdenum":
                case "MOLYBDENUM":
                case "42":
                   Molybdenum Mo = new Molybdenum();
                    Mo.setVisible(true);
                    this.setVisible(false);
                    break;     
              
                case "Tc":
                case "Technetium":
                case "technetium":
                case "TECHNETIUM":
                case "43":
                   Technetium Tc = new Technetium();
                    Tc.setVisible(true);
                    this.setVisible(false);
                    break;     
               
                case "Ru":
                case "Ruthenium":
                case "ruthenium":
                case "RUTHENIUM":
                case "44":
                   Ruthenium Ru = new Ruthenium();
                    Ru.setVisible(true);
                    this.setVisible(false);
                    break;     
                   
                case "Rh":
                case "Rhodium":
                case "rhodium":
                case "RHODIUM":
                case "45":
                   Rhodium Rh = new Rhodium();
                    Rh.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Pd":
                case "Palladium":
                case "palladium":
                case "PALLADIUM":
                case "46":
                   Palladium Pd = new Palladium();
                    Pd.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Cs":
                case "Caesium":
                case "caesium":
                case "CAESIUM":
                case "55":
                   Caesium Cs = new Caesium();
                    Cs.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Ba":
                case "Barium":
                case "barium":
                case "BARIUM":
                case "56":
                   Barium Ba = new Barium();
                    Ba.setVisible(true);
                    this.setVisible(false);
                    break;     
                
                case "Fr":
                case "Francium":
                case "francium":
                case "FRANCIUM":
                case "87":
                   Francium Fr = new Francium();
                    Fr.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Ra":
                case "Radium":
                case "radium":
                case "RADIUM":
                case "88":
                   Radium Ra = new Radium();
                    Ra.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Ag":
                case "Silver":
                case "silver":
                case "SILVER":
                case "47":
                try {
    String URL = "http://en.wikipedia.org/wiki/Silver";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;      
                        
                case "Cd":
                case "Cadmium":
                case "cadmium":
                case "CADMIUM":
                case "48":
                try {
    String URL = "http://en.wikipedia.org/wiki/Cadmium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                    
                case "In":
                case "Indium":
                case "indium":
                case "INDIUM":
                case "49":
                try {
    String URL = "http://en.wikipedia.org/wiki/Indium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                    
                case "Sn":
                case "Tin":
                case "tin":
                case "TIN":
                case "50":
                try {
    String URL = "http://en.wikipedia.org/wiki/Tin";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                        
                        
                case "Sb":
                case "Antimony":
                case "antimony":
                case "ANTIMONY":
                case "51":
                try {
    String URL = "http://en.wikipedia.org/wiki/Antimony";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                    
                             
                case "Te":
                case "Tellurium":
                case "tellurium":
                case "TELLURIUM":
                case "52":
                try {
    String URL = "http://en.wikipedia.org/wiki/Tellurium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;   
                    
                case "I":
                case "Iodine":
                case "iodine":
                case "IODINE":
                case "53":
                try {
    String URL = "http://en.wikipedia.org/wiki/Iodine";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;   
                    
                case "Xe":
                case "Xenon":
                case "xenon":
                case "XENONE":
                case "54":
                try {
    String URL = "http://en.wikipedia.org/wiki/Xenon";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;   
                                        
                case "Hf":
                case "Hafnium":
                case "hafnium":
                case "HAFNIUM":
                case "72":
                try {
    String URL = "http://en.wikipedia.org/wiki/Hafnium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;   
                               
                case "Ta":
                case "Tantalum":
                case "tantalum":
                case "TANTALUM":
                case "73":
                try {
    String URL = "http://en.wikipedia.org/wiki/Tantalum";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "W":
                case "Tungsten":
                case "tungsten":
                case "TUNGSTEN":
                case "74":
                try {
    String URL = "http://en.wikipedia.org/wiki/Tungsten";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Re":
                case "Rhenium":
                case "rhenium":
                case "RHENIUM":
                case "75":
                try {
    String URL = "http://en.wikipedia.org/wiki/Rhenium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Os":
                case "Osmium":
                case "osmium":
                case "OSMIUM":
                case "76":
                try {
    String URL = "http://en.wikipedia.org/wiki/Osmium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Ir":
                case "Iridium":
                case "iridium":
                case "IRIDIUM":
                case "77":
                try {
    String URL = "http://en.wikipedia.org/wiki/Iridium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Pt":
                case "Platinum":
                case "platinum":
                case "PLATINUM":
                case "78":
                try {
    String URL = "http://en.wikipedia.org/wiki/Platinum";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Au":
                case "Gold":
                case "gold":
                case "GOLD":
                case "79":
                try {
    String URL = "http://en.wikipedia.org/wiki/Gold";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Hg":
                case "Mercury":
                case "mercury":
                case "MERCURY":
                case "80":
                try {
    String URL = "http://en.wikipedia.org/wiki/Mercury_%28element%29";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Tl":
                case "Thallium":
                case "thallium":
                case "THALLIUM":
                case "81":
                try {
    String URL = "http://en.wikipedia.org/wiki/Thallium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Pb":
                case "Lead":
                case "lead":
                case "LEAD":
                case "82":
                try {
    String URL = "http://en.wikipedia.org/wiki/Lead";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Bi":
                case "Bismuth":
                case "bismuth":
                case "BISMUTH":
                case "83":
                try {
    String URL = "http://en.wikipedia.org/wiki/Bismuth";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Po":
                case "Polonium":
                case "polonium":
                case "POLONIUM":
                case "84":
                try {
    String URL = "http://en.wikipedia.org/wiki/Polonium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "At":
                case "Astatine":
                case "astatine":
                case "ASTATINE":
                case "85":
                try {
    String URL = "http://en.wikipedia.org/wiki/Astatine";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Rn":
                case "Radon":
                case "radon":
                case "RADON":
                case "86":
                try {
    String URL = "http://en.wikipedia.org/wiki/Radon";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Rf":
                case "Rutherfordium":
                case "rutherfordium":
                case "RUTHERFORDIUM":
                case "104":
                try {
    String URL = "http://en.wikipedia.org/wiki/Rutherfordium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Db":
                case "Dubnium":
                case "dubnium":
                case "DUBNIUM":
                case "105":
                try {
    String URL = "http://en.wikipedia.org/wiki/Dubnium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Sg":
                case "Seaborgium":
                case "seaborgium":
                case "SEABORGIUM":
                case "106":
                try {
    String URL = "http://en.wikipedia.org/wiki/Seaborgium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Bh":
                case "Bohrium":
                case "bohrium":
                case "BOHRIUM":
                case "107":
                try {
    String URL = "http://en.wikipedia.org/wiki/Bohrium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Hs":
                case "Hassium":
                case "hassium":
                case "HASSISUM":
                case "108":
                try {
    String URL = "http://en.wikipedia.org/wiki/Hassium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Mt":
                case "Meitnerium":
                case "meitnerium":
                case "MEITNERIUM":
                case "109":
                try {
    String URL = "http://en.wikipedia.org/wiki/Meitnerium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Ds":
                case "Darmstadtium":
                case "darmstadtium":
                case "DARMSTADTIUM":
                case "110":
                try {
    String URL = "http://en.wikipedia.org/wiki/Darmstadtium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Rg":
                case "Roentgenium":
                case "roentgenium":
                case "ROENTGENIUM":
                case "111":
                try {
    String URL = "http://en.wikipedia.org/wiki/Roentgenium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Cn":
                case "Copernicium":
                case "copernicium":
                case "COPERNICIUM":
                case "112":
                try {
    String URL = "http://en.wikipedia.org/wiki/Copernicium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Uut":
                case "Ununtrium":
                case "ununtrium":
                case "UNUNTRIUM":
                case "113":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ununtrium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Fl":
                case "Flerovium":
                case "flerovium":
                case "FLEROVIUM":
                case "114":
                try {
    String URL = "http://en.wikipedia.org/wiki/Flerovium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Uup":
                case "Ununpentium":
                case "ununpentium":
                case "UNUNPENTIUM":
                case "115":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ununpentium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Lv":
                case "Livermorium":
                case "livermorium":
                case "LIVERMORIUM":
                case "116":
                try {
    String URL = "http://en.wikipedia.org/wiki/Livermorium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Uus":
                case "Ununseptium":
                case "ununseptium":
                case "UNUNSEPTIUM":
                case "117":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ununseptium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Uuo":
                case "Ununoctium":
                case "ununoctium":
                case "UNUNOCTIUM":
                case "118":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ununoctium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "La":
                case "Lanthanum":
                case "lanthanum":
                case "LANTHANUM":
                case "57":
                try {
    String URL = "http://en.wikipedia.org/wiki/Lanthanum";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Ce":
                case "Cerium":
                case "cerium":
                case "CERIUM":
                case "58":
                try {
    String URL = "http://en.wikipedia.org/wiki/Cerium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Pr":
                case "Praseodymium":
                case "praseodymium":
                case "PRASEODYMIUM":
                case "59":
                try {
    String URL = "http://en.wikipedia.org/wiki/Praseodymium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Nd":
                case "Neodymium":
                case "neodymium":
                case "NEODYNIUM":
                case "60":
                try {
    String URL = "http://en.wikipedia.org/wiki/Neodymium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Pm":
                case "Promethium":
                case "promethium":
                case "PROMETHIUM":
                case "61":
                try {
    String URL = "http://en.wikipedia.org/wiki/Promethium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Sm":
                case "Samarium":
                case "samarium":
                case "SAMARIUM":
                case "62":
                try {
    String URL = "http://en.wikipedia.org/wiki/Samarium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                case "Eu":
                case "Europium":
                case "europium":
                case "EUROPIUM":
                case "63":
                try {
    String URL = "http://en.wikipedia.org/wiki/Europium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Gd":
                case "Gadolinium":
                case "gadolinium":
                case "GADOLINIUM":
                case "64":
                try {
    String URL = "http://en.wikipedia.org/wiki/Gadolinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Tb":
                case "Terbium":
                case "terbium":
                case "TERBIUM":
                case "65":
                try {
    String URL = "http://en.wikipedia.org/wiki/Terbium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Dy":
                case "Dysprosium":
                case "dysprosium":
                case "DYSPROSIUM":
                case "66":
                try {
    String URL = "http://en.wikipedia.org/wiki/Dysprosium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Ho":
                case "Holmium":
                case "holmium":
                case "HOLMIUM":
                case "67":
                try {
    String URL = "http://en.wikipedia.org/wiki/Holmium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Er":
                case "Erbium":
                case "erbium":
                case "ERBIUM":
                case "68":
                try {
    String URL = "http://en.wikipedia.org/wiki/Erbium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Tm":
                case "Thulium":
                case "thulium":
                case "THULIUM":
                case "69":
                try {
    String URL = "http://en.wikipedia.org/wiki/Thulium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Yb":
                case "Ytterbium":
                case "ytterbium":
                case "YTTERBIUM":
                case "70":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ytterbium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Lu":
                case "Lutetium":
                case "lutetium":
                case "LUTETIUM":
                case "71":
                try {
    String URL = "http://en.wikipedia.org/wiki/Lutetium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                case "Ac":
                case "Actinium":
                case "actinium":
                case "ACTINIUM":
                case "89":
                try {
    String URL = "http://en.wikipedia.org/wiki/Actinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                case "Th":
                case "Thorium":
                case "thorium":
                case "THORIUM":
                case "90":
                try {
    String URL = "http://en.wikipedia.org/wiki/Thorium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                case "Pa":
                case "Protactinium":
                case "protactinium":
                case "PROTACTINIUM":
                case "91":
                try {
    String URL = "http://en.wikipedia.org/wiki/Protactinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                case "U":
                case "Uranium":
                case "uranium":
                case "URANIUM":
                case "92":
                try {
    String URL = "http://en.wikipedia.org/wiki/Uranium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                case "Np":
                case "Neptunium":
                case "neptunium":
                case "NEPTUNIUM":
                case "93":
                try {
    String URL = "http://en.wikipedia.org/wiki/Neptunium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                case "Pu":
                case "Plutonium":
                case "plutonium":
                case "PLUTONIUM":
                case "94":
                try {
    String URL = "http://en.wikipedia.org/wiki/Plutonium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Am":
                case "Americium":
                case "americium":
                case "AMERICIUM":
                case "95":
                try {
    String URL = "http://en.wikipedia.org/wiki/Americium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Cm":
                case "Curium":
                case "curium":
                case "CURIUM":
                case "96":
                try {
    String URL = "http://en.wikipedia.org/wiki/Curium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Bk":
                case "Berkelium":
                case "berkelium":
                case "BERKELIUM":
                case "97":
                try {
    String URL = "http://en.wikipedia.org/wiki/Berkelium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Cf":
                case "Californium":
                case "californium":
                case "CALIFORNIUM":
                case "98":
                try {
    String URL = "http://en.wikipedia.org/wiki/Californium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Es":
                case "Einsteinium":
                case "einsteinium":
                case "EINSTEINIUM":
                case "99":
                try {
    String URL = "http://en.wikipedia.org/wiki/Einsteinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Fm":
                case "Fermium":
                case "fermium":
                case "FERMIUM":
                case "100":
                try {
    String URL = "http://en.wikipedia.org/wiki/Fermium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Md":
                case "Mendelevium":
                case "mendelevium":
                case "MENDELEVIUM":
                case "101":
                try {
    String URL = "http://en.wikipedia.org/wiki/Mendelevium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;       
                case "No":
                case "Nobelium":
                case "nobelium":
                case "NOBELIUM":
                case "102":
                try {
    String URL = "http://en.wikipedia.org/wiki/Nobelium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Lr":
                case "Lawrencium":
                case "lawrencium":
                case "LAWRENCIUM":
                case "103":
                try {
    String URL = "http://en.wikipedia.org/wiki/Lawrencium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                default: JOptionPane.showMessageDialog(null,"Element doesn't exist or check for correct spelling.");
   }
    }//GEN-LAST:event_SearchBTNActionPerformed

    private void jLabel42MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel42MouseClicked
   try {
    String URL = "http://en.wikipedia.org/wiki/Metal";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_jLabel42MouseClicked

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
      try {
    String URL = "http://en.wikipedia.org/wiki/Alkali_metal";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
    }//GEN-LAST:event_jLabel34MouseClicked

    private void jLabel33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseClicked
       try {
    String URL = "http://en.wikipedia.org/wiki/Alkaline_earth_metal";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel33MouseClicked

    private void jLabel36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel36MouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Inner_transition_metal";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel36MouseClicked

    private void jLabel39MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel39MouseClicked
      try {
    String URL = "http://en.wikipedia.org/wiki/Lanthanide";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel39MouseClicked

    private void jLabel37MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel37MouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Actinide";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel37MouseClicked

    private void jLabel43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel43MouseClicked
        try {
    String URL = "http://en.wikipedia.org/wiki/Transition_metal";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel43MouseClicked

    private void jLabel41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel41MouseClicked
        try {
    String URL = "http://en.wikipedia.org/wiki/Post-transition_metal";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel41MouseClicked

    private void jLabel46MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel46MouseClicked
        try {
    String URL = "http://en.wikipedia.org/wiki/Metalloid";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel46MouseClicked

    private void jLabel40MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel40MouseClicked
       try {
    String URL = "http://en.wikipedia.org/wiki/Nonmetal";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel40MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
       try {
    String URL = "http://en.wikipedia.org/wiki/Nonmetal";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel35MouseClicked

    private void jLabel45MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel45MouseClicked
  try {
    String URL = "http://en.wikipedia.org/wiki/Halogen";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel45MouseClicked

    private void jLabel44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel44MouseClicked
    try {
    String URL = "http://en.wikipedia.org/wiki/Noble_gas";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}    
    }//GEN-LAST:event_jLabel44MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
     try {
    String URL = "http://en.wikipedia.org/wiki/Periodic_table";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
} 
    }//GEN-LAST:event_jLabel7MouseClicked

    private void SearchBTNKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchBTNKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchBTNKeyPressed

    private void SearchTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchTFKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTFKeyPressed

    private void SearchTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchTFKeyTyped
if(evt.getKeyChar()==KeyEvent.VK_ENTER){
        String a = SearchTF.getText();
   switch (a) {
                case "H":
                case "Hydrogen":
                case "HYDROGEN":
                case "hydrogen":
                case "1":
                    Hydrogen H = new Hydrogen();
                    H.setVisible(true);
                    this.setVisible(false);
                    break;
                
                case "Li":
                case "Lithium":
                case "LITHIUM":
                case "lithium":
                case "3":
                    Lithium Li = new Lithium();
                    Li.setVisible(true);
                    this.setVisible(false);
                    break;
                
                case "He":
                case "Helium":
                case "HELIUM":
                case "helium":
                case "2":
                    Helium He = new Helium();
                    He.setVisible(true);
                    this.setVisible(false);
                    break;
                
                case "Be":
                case "Beryllium":
                case "beryllium":
                case "BERYLLIUM":
                case "4":
                    Beryllium Be = new Beryllium();
                    Be.setVisible(true);
                    this.setVisible(false);
                    break;
            
                case "B":
                case "Boron":
                case "boron":
                case "BORON":
                case "5":
                    Boron B = new Boron();
                    B.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "C":
                case "Carbon":
                case "carbon":
                case "CARBON":
                case "6":
                    Carbon C = new Carbon();
                    C.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "N":
                case "Nitrogen":
                case "nitrogen":
                case "NITROGEN":
                case "7":
                    Nitrogen N = new Nitrogen();
                    N.setVisible(true);
                    this.setVisible(false);
                    break;
            
                case "O":
                case "Oxygen":
                case "oxygen":
                case "OXYGEN":
                case "8":
                    Oxygen O = new Oxygen();
                    O.setVisible(true);
                    this.setVisible(false);
                    break;
            
                case "F":
                case "Fluorine":
                case "fluorine":
                case "FLUORINE":
                case "9":
                    Fluorine F = new Fluorine();
                    F.setVisible(true);
                    this.setVisible(false);
                    break;
              
                case "Ne":
                case "Neon":
                case "neon":
                case "NEON":
                case "10":
                    Neon Ne = new Neon();
                    Ne.setVisible(true);
                    this.setVisible(false);
                    break;
                
                case "Na":
                case "Sodium":
                case "sodium":
                case "SODIUM":
                case "11":
                    Sodium_Na Na = new Sodium_Na();
                    Na.setVisible(true);
                    this.setVisible(false);
                    break;
               
                case "Mg":
                case "Magnesium":
                case "magnesium":
                case "MAGNESIUM":
                case "12":
                    Magnesium Mg = new Magnesium();
                    Mg.setVisible(true);
                    this.setVisible(false);
                    break;    
   
                case "Al":
                case "Aluminium":
                case "aluminium":
                case "ALUMINIUM":
                case "13":
                    Aluminium Al = new Aluminium();
                    Al.setVisible(true);
                    this.setVisible(false);
                    break;    
   
                case "Si":
                case "Silicon":
                case "silicon":
                case "SILICON":
                case "14":
                    Silicon Si = new Silicon();
                    Si.setVisible(true);
                    this.setVisible(false);
                    break;    
     
                case "P":
                case "Phosphorus":
                case "phosphorus":
                case "PHOSPHORUS":
                case "15":
                    Phosphorus P = new Phosphorus();
                    P.setVisible(true);
                    this.setVisible(false);
                    break;  
                    
                case "S":
                case "Sulphur":
                case "sulphur":
                case "SULPHUR":
                case "16":
                    Sulphur S = new Sulphur();
                    S.setVisible(true);
                    this.setVisible(false);
                    break;  
                    
                case "Cl":
                case "Chlorine":
                case "chlorine":
                case "CHLORINE":
                case "17":
                    Chlorine Cl = new Chlorine();
                    Cl.setVisible(true);
                    this.setVisible(false);
                    break;  
                          
                case "Ar":
                case "Argon":
                case "argon":
                case "ARGON":
                case "18":
                    Argon Ar = new Argon();
                    Ar.setVisible(true);
                    this.setVisible(false);
                    break;  
                    
                case "K":
                case "Potassium":
                case "potassium":
                case "POTASSIUM":
                case "19":
                    Potassium K = new Potassium();
                    K.setVisible(true);
                    this.setVisible(false);
                    break;  
                 
                case "Ca":
                case "Calcium":
                case "calcium":
                case "CALCIUM":
                case "20":
                    Calcium Ca = new Calcium();
                    Ca.setVisible(true);
                    this.setVisible(false);
                    break;      
   
                case "Sc":
                case "Scandium":
                case "scandium":
                case "SCANDIUM":
                case "21":
                    Scandium Sc = new Scandium();
                    Sc.setVisible(true);
                    this.setVisible(false);
                    break;      
    
                case "Ti":
                case "Titanium":
                case "titanium":
                case "TITANIUM":
                case "22":
                    Titanium Ti = new Titanium();
                    Ti.setVisible(true);
                    this.setVisible(false);
                    break;  
   
                case "V":
                case "Vanadium":
                case "vanadium":
                case "VANADIUM":
                case "23":
                    Vanadium V = new Vanadium();
                    V.setVisible(true);
                    this.setVisible(false);
                    break;  
   
                case "Cr":
                case "Chromium":
                case "chromium":
                case "CHROMIUM":
                case "24":
                    Chromium Cr = new Chromium();
                    Cr.setVisible(true);
                    this.setVisible(false);
                    break;      
                    
                case "Mn":
                case "Manganese":
                case "manganese":
                case "MANGANESE":
                case "25":
                    Manganese Mn = new Manganese();
                    Mn.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "Fe":
                case "Iron":
                case "iron":
                case "IRON":
                case "26":
                    Iron Fe = new Iron();
                    Fe.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "Co":
                case "Cobalt":
                case "cobalt":
                case "COBALT":
                case "27":
                    Cobalt Co = new Cobalt();
                    Co.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "Ni":
                case "Nickel":
                case "nickelt":
                case "NICKEL":
                case "28":
                    Nickel Ni = new Nickel();
                    Ni.setVisible(true);
                    this.setVisible(false);
                    break;
                    
                case "Cu":
                case "Copper":
                case "copper":
                case "COPPER":
                case "29":
                    Copper Cu = new Copper();
                    Cu.setVisible(true);
                    this.setVisible(false);
                    break;   
                    
                case "Zn":
                case "Zinc":
                case "zinc":
                case "ZINC":
                case " 30 ":
                    Zinc Zn = new Zinc();
                    Zn.setVisible(true);
                    this.setVisible(false);
                    break;   
                    
                case "Ga":
                case "Gallium":
                case "gallium":
                case "GALLIUM":
                case "31":
                    Gallium Ga = new Gallium();
                    Ga.setVisible(true);
                    this.setVisible(false);
                    break;   
                    
                case "Ge":
                case "Germanium":
                case "germanium":
                case "GERMANIUM":
                case "32":
                    Germanium Ge = new Germanium();
                    Ge.setVisible(true);
                    this.setVisible(false);
                    break;   
                    
                case "As":
                case "Arsenic":
                case "arsenic":
                case "ARSENIC":
                case "33":
                    Arsenic As = new Arsenic();
                    As.setVisible(true);
                    this.setVisible(false);
                    break;      
                
                case "Se":
                case "Selenium":
                case "selenium":
                case "SELENIUM":
                case "34":
                    Selenium Se = new Selenium();
                    Se.setVisible(true);
                    this.setVisible(false);
                    break;      
                       
                case "Br":
                case "Bromine":
                case "bromine":
                case "BROMINE":
                case "35":
                try {
    String URL = "http://en.wikipedia.org/wiki/Bromine";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;       
                
                case "Kr":
                case "Krypton":
                case "krypton":
                case "KRYPTON":
                case "36":
                try {
    String URL = "http://en.wikipedia.org/wiki/Krypton";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;      
                    
                    
                case "Rb":
                case "Rubidium":
                case "rubidium":
                case "RUBIDIUM":
                case "37":
                    Rubidium Rb = new Rubidium();
                    Rb.setVisible(true);
                    this.setVisible(false);
                    break;            
                    
                       
                case "Sr":
                case "Strontium":
                case "strontium":
                case "STRONTIUM":
                case "38":
                    Strontium Sr = new Strontium();
                    Sr.setVisible(true);
                    this.setVisible(false);
                    break;           
                    
                case "Y":
                case "Yttrium":
                case "yttrium":
                case "YTTRIUM":
                case "39":
                    Yttrium Y = new Yttrium();
                    Y.setVisible(true);
                    this.setVisible(false);
                    break;           
                   
                case "Zr":
                case "Zirconium":
                case "zirconium":
                case "ZIRCONIUM":
                case "40":
                    Zirconium Zr = new Zirconium();
                    Zr.setVisible(true);
                    this.setVisible(false);
                    break;      
                    
                case "Nb":
                case "Niobium":
                case "niobium":
                case "NIOBIUM":
                case "41":
                   Niobium Nb = new Niobium();
                    Nb.setVisible(true);
                    this.setVisible(false);
                    break;      
                    
                case "Mo":
                case "Molybdenum":
                case "molybdenum":
                case "MOLYBDENUM":
                case "42":
                   Molybdenum Mo = new Molybdenum();
                    Mo.setVisible(true);
                    this.setVisible(false);
                    break;     
              
                case "Tc":
                case "Technetium":
                case "technetium":
                case "TECHNETIUM":
                case "43":
                   Technetium Tc = new Technetium();
                    Tc.setVisible(true);
                    this.setVisible(false);
                    break;     
               
                case "Ru":
                case "Ruthenium":
                case "ruthenium":
                case "RUTHENIUM":
                case "44":
                   Ruthenium Ru = new Ruthenium();
                    Ru.setVisible(true);
                    this.setVisible(false);
                    break;     
                   
                case "Rh":
                case "Rhodium":
                case "rhodium":
                case "RHODIUM":
                case "45":
                   Rhodium Rh = new Rhodium();
                    Rh.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Pd":
                case "Palladium":
                case "palladium":
                case "PALLADIUM":
                case "46":
                   Palladium Pd = new Palladium();
                    Pd.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Cs":
                case "Caesium":
                case "caesium":
                case "CAESIUM":
                case "55":
                   Caesium Cs = new Caesium();
                    Cs.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Ba":
                case "Barium":
                case "barium":
                case "BARIUM":
                case "56":
                   Barium Ba = new Barium();
                    Ba.setVisible(true);
                    this.setVisible(false);
                    break;     
                
                case "Fr":
                case "Francium":
                case "francium":
                case "FRANCIUM":
                case "87":
                   Francium Fr = new Francium();
                    Fr.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Ra":
                case "Radium":
                case "radium":
                case "RADIUM":
                case "88":
                   Radium Ra = new Radium();
                    Ra.setVisible(true);
                    this.setVisible(false);
                    break;     
                    
                case "Ag":
                case "Silver":
                case "silver":
                case "SILVER":
                case "47":
                try {
    String URL = "http://en.wikipedia.org/wiki/Silver";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;      
                        
                case "Cd":
                case "Cadmium":
                case "cadmium":
                case "CADMIUM":
                case "48":
                try {
    String URL = "http://en.wikipedia.org/wiki/Cadmium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                    
                case "In":
                case "Indium":
                case "indium":
                case "INDIUM":
                case "49":
                try {
    String URL = "http://en.wikipedia.org/wiki/Indium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                    
                case "Sn":
                case "Tin":
                case "tin":
                case "TIN":
                case "50":
                try {
    String URL = "http://en.wikipedia.org/wiki/Tin";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                        
                        
                case "Sb":
                case "Antimony":
                case "antimony":
                case "ANTIMONY":
                case "51":
                try {
    String URL = "http://en.wikipedia.org/wiki/Antimony";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                    
                             
                case "Te":
                case "Tellurium":
                case "tellurium":
                case "TELLURIUM":
                case "52":
                try {
    String URL = "http://en.wikipedia.org/wiki/Tellurium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;   
                    
                case "I":
                case "Iodine":
                case "iodine":
                case "IODINE":
                case "53":
                try {
    String URL = "http://en.wikipedia.org/wiki/Iodine";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;   
                    
                case "Xe":
                case "Xenon":
                case "xenon":
                case "XENONE":
                case "54":
                try {
    String URL = "http://en.wikipedia.org/wiki/Xenon";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;   
                                        
                case "Hf":
                case "Hafnium":
                case "hafnium":
                case "HAFNIUM":
                case "72":
                try {
    String URL = "http://en.wikipedia.org/wiki/Hafnium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;   
                               
                case "Ta":
                case "Tantalum":
                case "tantalum":
                case "TANTALUM":
                case "73":
                try {
    String URL = "http://en.wikipedia.org/wiki/Tantalum";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "W":
                case "Tungsten":
                case "tungsten":
                case "TUNGSTEN":
                case "74":
                try {
    String URL = "http://en.wikipedia.org/wiki/Tungsten";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Re":
                case "Rhenium":
                case "rhenium":
                case "RHENIUM":
                case "75":
                try {
    String URL = "http://en.wikipedia.org/wiki/Rhenium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Os":
                case "Osmium":
                case "osmium":
                case "OSMIUM":
                case "76":
                try {
    String URL = "http://en.wikipedia.org/wiki/Osmium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Ir":
                case "Iridium":
                case "iridium":
                case "IRIDIUM":
                case "77":
                try {
    String URL = "http://en.wikipedia.org/wiki/Iridium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Pt":
                case "Platinum":
                case "platinum":
                case "PLATINUM":
                case "78":
                try {
    String URL = "http://en.wikipedia.org/wiki/Platinum";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Au":
                case "Gold":
                case "gold":
                case "GOLD":
                case "79":
                try {
    String URL = "http://en.wikipedia.org/wiki/Gold";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Hg":
                case "Mercury":
                case "mercury":
                case "MERCURY":
                case "80":
                try {
    String URL = "http://en.wikipedia.org/wiki/Mercury_%28element%29";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Tl":
                case "Thallium":
                case "thallium":
                case "THALLIUM":
                case "81":
                try {
    String URL = "http://en.wikipedia.org/wiki/Thallium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Pb":
                case "Lead":
                case "lead":
                case "LEAD":
                case "82":
                try {
    String URL = "http://en.wikipedia.org/wiki/Lead";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Bi":
                case "Bismuth":
                case "bismuth":
                case "BISMUTH":
                case "83":
                try {
    String URL = "http://en.wikipedia.org/wiki/Bismuth";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Po":
                case "Polonium":
                case "polonium":
                case "POLONIUM":
                case "84":
                try {
    String URL = "http://en.wikipedia.org/wiki/Polonium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "At":
                case "Astatine":
                case "astatine":
                case "ASTATINE":
                case "85":
                try {
    String URL = "http://en.wikipedia.org/wiki/Astatine";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Rn":
                case "Radon":
                case "radon":
                case "RADON":
                case "86":
                try {
    String URL = "http://en.wikipedia.org/wiki/Radon";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Rf":
                case "Rutherfordium":
                case "rutherfordium":
                case "RUTHERFORDIUM":
                case "104":
                try {
    String URL = "http://en.wikipedia.org/wiki/Rutherfordium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Db":
                case "Dubnium":
                case "dubnium":
                case "DUBNIUM":
                case "105":
                try {
    String URL = "http://en.wikipedia.org/wiki/Dubnium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Sg":
                case "Seaborgium":
                case "seaborgium":
                case "SEABORGIUM":
                case "106":
                try {
    String URL = "http://en.wikipedia.org/wiki/Seaborgium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Bh":
                case "Bohrium":
                case "bohrium":
                case "BOHRIUM":
                case "107":
                try {
    String URL = "http://en.wikipedia.org/wiki/Bohrium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Hs":
                case "Hassium":
                case "hassium":
                case "HASSISUM":
                case "108":
                try {
    String URL = "http://en.wikipedia.org/wiki/Hassium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Mt":
                case "Meitnerium":
                case "meitnerium":
                case "MEITNERIUM":
                case "109":
                try {
    String URL = "http://en.wikipedia.org/wiki/Meitnerium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Ds":
                case "Darmstadtium":
                case "darmstadtium":
                case "DARMSTADTIUM":
                case "110":
                try {
    String URL = "http://en.wikipedia.org/wiki/Darmstadtium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Rg":
                case "Roentgenium":
                case "roentgenium":
                case "ROENTGENIUM":
                case "111":
                try {
    String URL = "http://en.wikipedia.org/wiki/Roentgenium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Cn":
                case "Copernicium":
                case "copernicium":
                case "COPERNICIUM":
                case "112":
                try {
    String URL = "http://en.wikipedia.org/wiki/Copernicium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Uut":
                case "Ununtrium":
                case "ununtrium":
                case "UNUNTRIUM":
                case "113":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ununtrium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Fl":
                case "Flerovium":
                case "flerovium":
                case "FLEROVIUM":
                case "114":
                try {
    String URL = "http://en.wikipedia.org/wiki/Flerovium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Uup":
                case "Ununpentium":
                case "ununpentium":
                case "UNUNPENTIUM":
                case "115":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ununpentium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Lv":
                case "Livermorium":
                case "livermorium":
                case "LIVERMORIUM":
                case "116":
                try {
    String URL = "http://en.wikipedia.org/wiki/Livermorium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Uus":
                case "Ununseptium":
                case "ununseptium":
                case "UNUNSEPTIUM":
                case "117":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ununseptium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Uuo":
                case "Ununoctium":
                case "ununoctium":
                case "UNUNOCTIUM":
                case "118":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ununoctium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "La":
                case "Lanthanum":
                case "lanthanum":
                case "LANTHANUM":
                case "57":
                try {
    String URL = "http://en.wikipedia.org/wiki/Lanthanum";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Ce":
                case "Cerium":
                case "cerium":
                case "CERIUM":
                case "58":
                try {
    String URL = "http://en.wikipedia.org/wiki/Cerium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Pr":
                case "Praseodymium":
                case "praseodymium":
                case "PRASEODYMIUM":
                case "59":
                try {
    String URL = "http://en.wikipedia.org/wiki/Praseodymium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Nd":
                case "Neodymium":
                case "neodymium":
                case "NEODYNIUM":
                case "60":
                try {
    String URL = "http://en.wikipedia.org/wiki/Neodymium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Pm":
                case "Promethium":
                case "promethium":
                case "PROMETHIUM":
                case "61":
                try {
    String URL = "http://en.wikipedia.org/wiki/Promethium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Sm":
                case "Samarium":
                case "samarium":
                case "SAMARIUM":
                case "62":
                try {
    String URL = "http://en.wikipedia.org/wiki/Samarium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                case "Eu":
                case "Europium":
                case "europium":
                case "EUROPIUM":
                case "63":
                try {
    String URL = "http://en.wikipedia.org/wiki/Europium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Gd":
                case "Gadolinium":
                case "gadolinium":
                case "GADOLINIUM":
                case "64":
                try {
    String URL = "http://en.wikipedia.org/wiki/Gadolinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;  
                case "Tb":
                case "Terbium":
                case "terbium":
                case "TERBIUM":
                case "65":
                try {
    String URL = "http://en.wikipedia.org/wiki/Terbium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Dy":
                case "Dysprosium":
                case "dysprosium":
                case "DYSPROSIUM":
                case "66":
                try {
    String URL = "http://en.wikipedia.org/wiki/Dysprosium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Ho":
                case "Holmium":
                case "holmium":
                case "HOLMIUM":
                case "67":
                try {
    String URL = "http://en.wikipedia.org/wiki/Holmium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Er":
                case "Erbium":
                case "erbium":
                case "ERBIUM":
                case "68":
                try {
    String URL = "http://en.wikipedia.org/wiki/Erbium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Tm":
                case "Thulium":
                case "thulium":
                case "THULIUM":
                case "69":
                try {
    String URL = "http://en.wikipedia.org/wiki/Thulium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Yb":
                case "Ytterbium":
                case "ytterbium":
                case "YTTERBIUM":
                case "70":
                try {
    String URL = "http://en.wikipedia.org/wiki/Ytterbium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Lu":
                case "Lutetium":
                case "lutetium":
                case "LUTETIUM":
                case "71":
                try {
    String URL = "http://en.wikipedia.org/wiki/Lutetium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                case "Ac":
                case "Actinium":
                case "actinium":
                case "ACTINIUM":
                case "89":
                try {
    String URL = "http://en.wikipedia.org/wiki/Actinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                case "Th":
                case "Thorium":
                case "thorium":
                case "THORIUM":
                case "90":
                try {
    String URL = "http://en.wikipedia.org/wiki/Thorium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                case "Pa":
                case "Protactinium":
                case "protactinium":
                case "PROTACTINIUM":
                case "91":
                try {
    String URL = "http://en.wikipedia.org/wiki/Protactinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;    
                case "U":
                case "Uranium":
                case "uranium":
                case "URANIUM":
                case "92":
                try {
    String URL = "http://en.wikipedia.org/wiki/Uranium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                case "Np":
                case "Neptunium":
                case "neptunium":
                case "NEPTUNIUM":
                case "93":
                try {
    String URL = "http://en.wikipedia.org/wiki/Neptunium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;     
                case "Pu":
                case "Plutonium":
                case "plutonium":
                case "PLUTONIUM":
                case "94":
                try {
    String URL = "http://en.wikipedia.org/wiki/Plutonium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Am":
                case "Americium":
                case "americium":
                case "AMERICIUM":
                case "95":
                try {
    String URL = "http://en.wikipedia.org/wiki/Americium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Cm":
                case "Curium":
                case "curium":
                case "CURIUM":
                case "96":
                try {
    String URL = "http://en.wikipedia.org/wiki/Curium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Bk":
                case "Berkelium":
                case "berkelium":
                case "BERKELIUM":
                case "97":
                try {
    String URL = "http://en.wikipedia.org/wiki/Berkelium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Cf":
                case "Californium":
                case "californium":
                case "CALIFORNIUM":
                case "98":
                try {
    String URL = "http://en.wikipedia.org/wiki/Californium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Es":
                case "Einsteinium":
                case "einsteinium":
                case "EINSTEINIUM":
                case "99":
                try {
    String URL = "http://en.wikipedia.org/wiki/Einsteinium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Fm":
                case "Fermium":
                case "fermium":
                case "FERMIUM":
                case "100":
                try {
    String URL = "http://en.wikipedia.org/wiki/Fermium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break; 
                case "Md":
                case "Mendelevium":
                case "mendelevium":
                case "MENDELEVIUM":
                case "101":
                try {
    String URL = "http://en.wikipedia.org/wiki/Mendelevium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;       
                case "No":
                case "Nobelium":
                case "nobelium":
                case "NOBELIUM":
                case "102":
                try {
    String URL = "http://en.wikipedia.org/wiki/Nobelium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                case "Lr":
                case "Lawrencium":
                case "lawrencium":
                case "LAWRENCIUM":
                case "103":
                try {
    String URL = "http://en.wikipedia.org/wiki/Lawrencium";
    java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
   
    } 
catch (IOException e) {   
    JOptionPane.showMessageDialog(null,"Internet Connection required");
}
                    break;
                default: JOptionPane.showMessageDialog(null,"Element doesn't exist or check for correct spelling.");
   }                  
}

    }//GEN-LAST:event_SearchTFKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Periodic_TableNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Periodic_TableNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Periodic_TableNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Periodic_TableNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Periodic_TableNew().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AcLbl;
    private javax.swing.JLabel AgLbl;
    private javax.swing.JLabel AlLbl;
    private javax.swing.JLabel AmLbl;
    private javax.swing.JLabel ArLbl;
    private javax.swing.JLabel AsLbl;
    private javax.swing.JLabel AtLbl;
    private javax.swing.JLabel AuLbl;
    private javax.swing.JLabel BLbl;
    private javax.swing.JLabel BaLbl;
    private javax.swing.JLabel BackGroundLbl;
    private javax.swing.JLabel BeLbl;
    private javax.swing.JLabel BhLbl;
    private javax.swing.JLabel BiLbl;
    private javax.swing.JLabel Bk;
    private javax.swing.JLabel BrLbl;
    private javax.swing.JLabel CLbl;
    private javax.swing.JLabel CaLbl;
    private javax.swing.JLabel CdLbl;
    private javax.swing.JLabel CeLbl;
    private javax.swing.JLabel CfLbl;
    private javax.swing.JLabel ClLbl;
    private javax.swing.JLabel CmLbl;
    private javax.swing.JLabel CnLbl;
    private javax.swing.JLabel CoLbl;
    private javax.swing.JLabel CrLbl;
    private javax.swing.JLabel CsLbl;
    private javax.swing.JLabel CuLbl;
    private javax.swing.JLabel DbLbl;
    private javax.swing.JLabel DsLbl;
    private javax.swing.JLabel DyLbl;
    private javax.swing.JLabel ErLbl;
    private javax.swing.JLabel EsLbl;
    private javax.swing.JLabel EuLbl;
    private javax.swing.JLabel FLbl;
    private javax.swing.JLabel FeLbl;
    private javax.swing.JLabel FlLbl;
    private javax.swing.JLabel FmLbl;
    private javax.swing.JLabel Frlbl;
    private javax.swing.JLabel GaLbl;
    private javax.swing.JLabel GdLbl;
    private javax.swing.JLabel GeLbl;
    private javax.swing.JLabel HLbl1;
    private javax.swing.JLabel HeLbl;
    private javax.swing.JLabel HfLbl;
    private javax.swing.JLabel HgLbl;
    private javax.swing.JLabel HoLbl;
    private javax.swing.JLabel HsLbl;
    private javax.swing.JLabel ILbl;
    private javax.swing.JLabel InLbl;
    private javax.swing.JLabel IrLbl;
    private javax.swing.JLabel KLbl;
    private javax.swing.JLabel KrLbl;
    private javax.swing.JLabel LaLbl;
    private javax.swing.JLabel Lbl1;
    private javax.swing.JLabel LiLbl;
    private javax.swing.JLabel LrLbl;
    private javax.swing.JLabel LuLbl;
    private javax.swing.JLabel LvLbl;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel MdLbl;
    private javax.swing.JLabel MgLbl;
    private javax.swing.JLabel MnLbl;
    private javax.swing.JLabel MoLbl;
    private javax.swing.JLabel MtLbl;
    private javax.swing.JLabel NLbl;
    private javax.swing.JLabel NaLbl;
    private javax.swing.JLabel NbLbl;
    private javax.swing.JLabel NdLbl;
    private javax.swing.JLabel NeLbl;
    private javax.swing.JLabel NiLbl;
    private javax.swing.JLabel NoLbl;
    private javax.swing.JLabel NpLbl;
    private javax.swing.JLabel OLbl;
    private javax.swing.JLabel OsLbl;
    private javax.swing.JLabel PLbl;
    private javax.swing.JLabel PaLbl;
    private javax.swing.JLabel PbLbl;
    private javax.swing.JLabel PdLbl;
    private javax.swing.JLabel PmLbl;
    private javax.swing.JLabel PoLbl;
    private javax.swing.JLabel PrLbl;
    private javax.swing.JLabel PtLbl;
    private javax.swing.JLabel PuLbl;
    private javax.swing.JLabel RaLbl;
    private javax.swing.JLabel RbLbl;
    private javax.swing.JLabel ReLbl;
    private javax.swing.JLabel RfLbl;
    private javax.swing.JLabel RgLbl;
    private javax.swing.JLabel RhLbl;
    private javax.swing.JLabel RnLbl;
    private javax.swing.JLabel RuLbl;
    private javax.swing.JLabel SLbl;
    private javax.swing.JLabel SbLbl;
    private javax.swing.JLabel ScLbl;
    private javax.swing.JLabel SeLbl;
    private javax.swing.JButton SearchBTN;
    private javax.swing.JTextField SearchTF;
    private javax.swing.JLabel SgLbl;
    private javax.swing.JLabel SiLbl;
    private javax.swing.JLabel SmLbl;
    private javax.swing.JLabel SnLbl;
    private javax.swing.JLabel SrLbl;
    private javax.swing.JLabel TaLbl;
    private javax.swing.JLabel TbLbl;
    private javax.swing.JLabel TcLbl;
    private javax.swing.JLabel TeLbl;
    private javax.swing.JLabel ThLbl;
    private javax.swing.JLabel TiLbl;
    private javax.swing.JLabel TlLbl;
    private javax.swing.JLabel TmLbl;
    private javax.swing.JLabel ULbl;
    private javax.swing.JLabel UuoLbl;
    private javax.swing.JLabel UupLbl;
    private javax.swing.JLabel UusLbl;
    private javax.swing.JLabel UutLbl;
    private javax.swing.JLabel VLbl;
    private javax.swing.JLabel WLbl;
    private javax.swing.JLabel XeLbl;
    private javax.swing.JLabel YLbl;
    private javax.swing.JLabel YbLbl;
    private javax.swing.JLabel ZnLbl1;
    private javax.swing.JLabel ZrLbl2;
    private javax.swing.JLabel ZrLbl3;
    private javax.swing.JLabel ZrLbl4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    // End of variables declaration//GEN-END:variables
}
